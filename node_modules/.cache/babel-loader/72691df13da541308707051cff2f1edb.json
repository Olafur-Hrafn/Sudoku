{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\devProjects\\\\sudokuManiac\\\\sudoku_app\\\\src\\\\components\\\\SudokuBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport './styles.css';\nimport Controls from '../components/Controls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  _s();\n\n  const [state, SetState] = useState(false);\n  const [lastActiveDiv, SetLastActiveDiv] = useState();\n  const [userAnwser, SetUserAnwser] = useState([]);\n  const [helperShaddow, SetHelperShaddow] = useState(false);\n  let refs = useRef(null);\n  refs.current = document.getElementsByClassName(\"SudokuBlock\")[2];\n  let liveBoard = [];\n  let anwser = [];\n\n  function applyShaddow(idx) {\n    let currentbox = document.getElementsByClassName(\"SudokuBlock\");\n\n    for (let i = 0; i <= currentbox.length; i++) {\n      console.log(currentbox[i]);\n    } //currentbox.style.backgroundColor = '';\n    //currentbox.style.backgroundColor = 'yellow';\n\n  } // Movement section: track user input and change div focus and insert or delete from innerText\n\n\n  function handleMovement(e, idx) {\n    applyShaddow(idx);\n    let currentBox = document.getElementsByClassName(\"SudokuBlock\")[idx];\n\n    switch (true) {\n      case e.keyCode === 38 && idx > 8:\n        refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx - 9];\n        refs.current.focus();\n        break;\n\n      case e.keyCode === 37 && idx > 0:\n        refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx - 1];\n        refs.current.focus();\n        break;\n\n      case e.keyCode === 39 && idx < 80:\n        refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx + 1];\n        refs.current.focus();\n        break;\n\n      case e.keyCode === 40 && idx < 72:\n        refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx + 9];\n        refs.current.focus();\n        break;\n\n      case e.key >= 1 && e.key <= 9 && isNaN(parseInt(liveBoard[idx])):\n        document.getElementsByClassName(\"SudokuBlock\")[idx].innerText = e.key;\n        anwser[idx] = parseInt(e.key);\n        checkSolution();\n        break;\n\n      case (e.keyCode === 46 || e.keyCode === 8) && currentBox.innerText != liveBoard[idx]:\n        document.getElementsByClassName(\"SudokuBlock\")[idx].innerText = '';\n        break;\n\n      default:\n        console.log(e);\n    }\n  }\n\n  function printBoard(board) {\n    for (let i = 0; i < board.length; i++) {\n      for (let j = 0; j < board[i].length; j++) {\n        if (board[i][j] === 0) {\n          liveBoard.push('  ');\n        } else {\n          liveBoard.push(board[i][j]);\n        }\n      }\n    }\n\n    anwser = [...liveBoard]; // const array = anwser.map(a => ({...a}));\n\n    return liveBoard.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: idx,\n      ref: refs[idx],\n      tabIndex: \"0\",\n      className: \"SudokuBlock\",\n      onClick: e => test(e, idx),\n      onKeyDown: e => handleMovement(e, idx),\n      children: item\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this));\n  }\n\n  let board = printBoard(props.currentBoard);\n\n  function test(e, idx) {\n    console.log(idx); //let x = e.target.__reactFiber$km7ltcxneuo.index\n    //console.log(x)\n    //let divIndex = e.target.__reactFiber$km7ltcxneuo.index;\n\n    refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx];\n    refs.current.focus();\n  }\n\n  function solve() {\n    //let arr1 = [1,2,3]\n    //let arr2 = [1,2,3]\n    let solvedBoard = props.solvedBoard;\n    solvedBoard = solvedBoard.flat(); // skíra einhvað annað en blocks  og laga þannig\n\n    const blocks = document.getElementsByClassName(\"SudokuBlock\");\n    let xAnwser = [];\n\n    for (let i = 0; i < blocks.length; i++) {\n      let text = blocks[i].innerText;\n\n      if (text === \"\") {\n        text = blocks[i].innerText;\n        xAnwser.push(text);\n      } else {\n        text = blocks[i].innerText;\n        xAnwser.push(parseInt(text));\n      }\n    }\n\n    if (JSON.stringify(solvedBoard) == JSON.stringify(xAnwser)) {\n      console.log(\"yessss Sir\");\n      console.log(state);\n    } else {\n      console.log(state);\n    } //  if (solvedBoard.length === anwser.length) {\n    //    return solvedBoard.every((element, index) => {\n    //      if (element === anwser[index]) {\n    //        \n    //        console.log(\"Sudoku board solved\")\n    //      }\n    //    });\n    //  } else {\n    //    console.log(\"not solved\");\n    //  }\n\n  } //function handleOutsideMovement(){\n  //  document.addEventListener('keydown',function(event){\n  //    let idx = refs.current.id;\n  //\n  //    if(event.keyCode === 76 && idx > 0){\n  //      idx = idx - 1\n  //      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx];\n  //      refs.current.focus();\n  //\n  //    }\n  //    console.log(event.keyCode);\n  //  })\n  //  //refs.current = e.target;\n  //  //e.target.focus();\n  //  //console.log(e)\n  //  //let divIndex = e.path[0].__reactFiber$nv6lose87zk.key;\n  //  //refs.current = document.getElementsByClassName(\"SudokuBlock\")[divIndex];\n  //  //refs.current.focus();\n  //}\n\n\n  function checkSolution() {\n    let solvedBoard = props.solvedBoard;\n    solvedBoard = solvedBoard.flat(); // skíra einhvað annað en blocks  og laga þannig\n\n    const tempArr = document.getElementsByClassName(\"SudokuBlock\");\n    let xAnwser = [];\n\n    for (let i = 0; i < tempArr.length; i++) {\n      let text = tempArr[i].innerText;\n\n      if (text === \"\") {\n        text = tempArr[i].innerText;\n        xAnwser.push(text);\n      } else {\n        text = tempArr[i].innerText;\n        xAnwser.push(parseInt(text));\n      }\n    }\n\n    if (JSON.stringify(solvedBoard) == JSON.stringify(xAnwser)) {\n      console.log(\"yessss Sir\");\n      props.SetIsSolved(current => !current); //handleState();\n    } else {\n      console.log(\"nibb\");\n    }\n  }\n\n  const handleState = () => {\n    props.SetIsSolved(current => !current);\n  };\n\n  useEffect(() => {\n    checkSolution();\n  }, []);\n  useEffect(() => {\n    if (liveBoard.length > 1) {\n      console.log(\"liveBoard is up\");\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[2];\n      refs.current.focus();\n    }\n  }, [liveBoard]);\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BoardAndControllerWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BoardContainer\",\n      children: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controlWrapper\",\n      children: /*#__PURE__*/_jsxDEV(Controls, {\n        SetDifficultyLevel: props.SetDifficultyLevel,\n        lastRef: refs,\n        liveBoard: liveBoard,\n        checkSolution: checkSolution,\n        SetScoreCard: props.SetScoreCard,\n        scoreCard: props.scoreCard,\n        isSolved: props.isSolved,\n        switchTheme: props.switchTheme,\n        difficultyLevel: props.difficultyLevel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"JA0qIMaozMHc9/uFYkY2iABJTtM=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Controls","Board","props","state","SetState","lastActiveDiv","SetLastActiveDiv","userAnwser","SetUserAnwser","helperShaddow","SetHelperShaddow","refs","current","document","getElementsByClassName","liveBoard","anwser","applyShaddow","idx","currentbox","i","length","console","log","handleMovement","e","currentBox","keyCode","focus","key","isNaN","parseInt","innerText","checkSolution","printBoard","board","j","push","map","item","test","currentBoard","solve","solvedBoard","flat","blocks","xAnwser","text","JSON","stringify","tempArr","SetIsSolved","handleState","SetDifficultyLevel","SetScoreCard","scoreCard","isSolved","switchTheme","difficultyLevel"],"sources":["C:/Users/User/Documents/devProjects/sudokuManiac/sudoku_app/src/components/SudokuBoard.js"],"sourcesContent":["import React, {useEffect, useState,useRef} from \"react\";\r\nimport './styles.css'\r\nimport Controls from '../components/Controls'\r\n\r\n\r\nfunction Board(props){\r\n  const [state,SetState] = useState(false);\r\n  const [lastActiveDiv,SetLastActiveDiv] = useState()\r\n  const [userAnwser, SetUserAnwser] = useState([])\r\n  const [helperShaddow,SetHelperShaddow] = useState(false);\r\n  let refs = useRef(null);\r\n  refs.current = document.getElementsByClassName(\"SudokuBlock\")[2];\r\n  let liveBoard = [];\r\n  let anwser = []; \r\n  \r\n  \r\n  function applyShaddow(idx){\r\n    let currentbox = document.getElementsByClassName(\"SudokuBlock\");\r\n      for(let i = 0; i <= currentbox.length; i++){\r\n        console.log(currentbox[i])\r\n      }\r\n    //currentbox.style.backgroundColor = '';\r\n    //currentbox.style.backgroundColor = 'yellow';\r\n\r\n    \r\n  }\r\n \r\n  // Movement section: track user input and change div focus and insert or delete from innerText\r\n   function handleMovement (e,idx){\r\n    applyShaddow(idx);\r\n    let currentBox = document.getElementsByClassName(\"SudokuBlock\")[idx];\r\n    switch(true) {\r\n    case e.keyCode === 38 && idx > 8:\r\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx - 9]\r\n      refs.current.focus();\r\n    break;\r\n    case e.keyCode === 37 && idx > 0:\r\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx - 1]\r\n      refs.current.focus();\r\n    break;\r\n    case e.keyCode === 39 && idx < 80:\r\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx + 1]\r\n      refs.current.focus();\r\n    break;\r\n    case e.keyCode === 40 && idx < 72:\r\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx + 9]\r\n      refs.current.focus();\r\n    break;\r\n    case e.key >= 1 && e.key <= 9 && isNaN(parseInt(liveBoard[idx])):\r\n      document.getElementsByClassName(\"SudokuBlock\")[idx].innerText = e.key;\r\n      anwser[idx] = parseInt(e.key);\r\n      checkSolution();\r\n    break;\r\n   case (e.keyCode === 46 || e.keyCode === 8)  && currentBox.innerText != liveBoard[idx]:  \r\n   document.getElementsByClassName(\"SudokuBlock\")[idx].innerText = '';\r\n    break;\r\n    \r\n  default:\r\n    console.log(e)\r\n}\r\n}\r\n\r\n  function printBoard(board){\r\n\r\n    for(let i = 0; i < board.length; i++){\r\n      for(let j =0; j < board[i].length; j++){\r\n        \r\n        if(board[i][j] === 0){ liveBoard.push('  ')}\r\n        else {liveBoard.push(board[i][j])}\r\n      }\r\n    }\r\n      anwser = [...liveBoard];\r\n     // const array = anwser.map(a => ({...a}));\r\n    return liveBoard.map((item, idx) => ( \r\n      <div\r\n        key={idx}\r\n        id={idx}\r\n        ref={refs[idx]}\r\n        tabIndex='0'\r\n        className='SudokuBlock'\r\n        onClick={(e) => test(e,idx)}\r\n        onKeyDown={(e) => handleMovement(e,idx)}\r\n        \r\n      >\r\n        {item}\r\n      </div>\r\n    ));\r\n      \r\n  }\r\n   \r\nlet board = printBoard(props.currentBoard)\r\n\r\nfunction test(e,idx){\r\n  console.log(idx);\r\n  //let x = e.target.__reactFiber$km7ltcxneuo.index\r\n//console.log(x)\r\n//let divIndex = e.target.__reactFiber$km7ltcxneuo.index;\r\nrefs.current = document.getElementsByClassName(\"SudokuBlock\")[idx]\r\nrefs.current.focus();\r\n}\r\n\r\nfunction solve(){\r\n //let arr1 = [1,2,3]\r\n //let arr2 = [1,2,3]\r\n let solvedBoard = props.solvedBoard;\r\n solvedBoard = solvedBoard.flat()\r\n // skíra einhvað annað en blocks  og laga þannig\r\n  const blocks = document.getElementsByClassName(\"SudokuBlock\");\r\n\r\n  let xAnwser = [];\r\n  for(let i = 0; i < blocks.length; i++){\r\n \r\n    let text = blocks[i].innerText\r\n    if( text === \"\"){\r\n       text = blocks[i].innerText;\r\n      xAnwser.push(text);\r\n    } else{\r\n       text = blocks[i].innerText\r\n      xAnwser.push(parseInt(text))\r\n    }\r\n\r\n  }\r\n\r\n  if(JSON.stringify(solvedBoard) == JSON.stringify(xAnwser)){\r\n    console.log(\"yessss Sir\");\r\n    console.log(state)\r\n  }else {\r\n    console.log(state);\r\n    \r\n  }\r\n\r\n//  if (solvedBoard.length === anwser.length) {\r\n//    return solvedBoard.every((element, index) => {\r\n//      if (element === anwser[index]) {\r\n//        \r\n//        console.log(\"Sudoku board solved\")\r\n//      }\r\n//    });\r\n//  } else {\r\n//    console.log(\"not solved\");\r\n//  }\r\n}\r\n\r\n\r\n\r\n//function handleOutsideMovement(){\r\n//  document.addEventListener('keydown',function(event){\r\n//    let idx = refs.current.id;\r\n//\r\n//    if(event.keyCode === 76 && idx > 0){\r\n//      idx = idx - 1\r\n//      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx];\r\n//      refs.current.focus();\r\n//\r\n//    }\r\n//    console.log(event.keyCode);\r\n//  })\r\n//  //refs.current = e.target;\r\n//  //e.target.focus();\r\n//  //console.log(e)\r\n//  //let divIndex = e.path[0].__reactFiber$nv6lose87zk.key;\r\n//  //refs.current = document.getElementsByClassName(\"SudokuBlock\")[divIndex];\r\n//  //refs.current.focus();\r\n//}\r\n\r\n\r\n\r\n  function checkSolution(){\r\n    let solvedBoard = props.solvedBoard;\r\n solvedBoard = solvedBoard.flat()\r\n // skíra einhvað annað en blocks  og laga þannig\r\n  const tempArr = document.getElementsByClassName(\"SudokuBlock\");\r\n\r\n  let xAnwser = [];\r\n  for(let i = 0; i < tempArr.length; i++){\r\n    let text = tempArr[i].innerText\r\n    if( text === \"\"){\r\n       text = tempArr[i].innerText;\r\n      xAnwser.push(text);\r\n    } else{\r\n       text = tempArr[i].innerText\r\n      xAnwser.push(parseInt(text))\r\n    }\r\n  }\r\n\r\n  if(JSON.stringify(solvedBoard) == JSON.stringify(xAnwser)){\r\n    console.log(\"yessss Sir\");\r\n    props.SetIsSolved(current => !current)\r\n    //handleState();\r\n    \r\n    } else {\r\n     console.log(\"nibb\");\r\n  }\r\n  }\r\n  const handleState = () => {\r\n    \r\n    props.SetIsSolved(current => !current);\r\n  };\r\n\r\nuseEffect(() => {\r\n checkSolution();\r\n},[])\r\n\r\nuseEffect(() => {\r\n\r\n  if(liveBoard.length > 1){\r\n    console.log(\"liveBoard is up\");\r\n    refs.current = document.getElementsByClassName(\"SudokuBlock\")[2];\r\n    refs.current.focus();\r\n  }\r\n  \r\n},[liveBoard])\r\n\r\nuseEffect(() => {\r\n  \r\n\r\n\r\n\r\n},[])\r\n  \r\nreturn(\r\n    <div className=\"BoardAndControllerWrap\">\r\n    <div className=\"BoardContainer\">\r\n      {board}\r\n    </div>\r\n    <div className=\"controlWrapper\">\r\n    <Controls\r\n        SetDifficultyLevel={props.SetDifficultyLevel}\r\n        lastRef={refs} \r\n        liveBoard={liveBoard}\r\n        checkSolution={checkSolution}\r\n        SetScoreCard={props.SetScoreCard}\r\n        scoreCard={props.scoreCard}\r\n        isSolved={props.isSolved}\r\n        switchTheme={props.switchTheme}\r\n        difficultyLevel={props.difficultyLevel}\r\n\r\n      />\r\n    </div>\r\n    \r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Board;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAmCC,MAAnC,QAAgD,OAAhD;AACA,OAAO,cAAP;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAGA,SAASC,KAAT,CAAeC,KAAf,EAAqB;EAAA;;EACnB,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,KAAD,CAAjC;EACA,MAAM,CAACO,aAAD,EAAeC,gBAAf,IAAmCR,QAAQ,EAAjD;EACA,MAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACW,aAAD,EAAeC,gBAAf,IAAmCZ,QAAQ,CAAC,KAAD,CAAjD;EACA,IAAIa,IAAI,GAAGZ,MAAM,CAAC,IAAD,CAAjB;EACAY,IAAI,CAACC,OAAL,GAAeC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,EAA+C,CAA/C,CAAf;EACA,IAAIC,SAAS,GAAG,EAAhB;EACA,IAAIC,MAAM,GAAG,EAAb;;EAGA,SAASC,YAAT,CAAsBC,GAAtB,EAA0B;IACxB,IAAIC,UAAU,GAAGN,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,CAAjB;;IACE,KAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAID,UAAU,CAACE,MAA/B,EAAuCD,CAAC,EAAxC,EAA2C;MACzCE,OAAO,CAACC,GAAR,CAAYJ,UAAU,CAACC,CAAD,CAAtB;IACD,CAJqB,CAKxB;IACA;;EAGD,CApBkB,CAsBnB;;;EACC,SAASI,cAAT,CAAyBC,CAAzB,EAA2BP,GAA3B,EAA+B;IAC9BD,YAAY,CAACC,GAAD,CAAZ;IACA,IAAIQ,UAAU,GAAGb,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,EAA+CI,GAA/C,CAAjB;;IACA,QAAO,IAAP;MACA,KAAKO,CAAC,CAACE,OAAF,KAAc,EAAd,IAAoBT,GAAG,GAAG,CAA/B;QACEP,IAAI,CAACC,OAAL,GAAeC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,EAA+CI,GAAG,GAAG,CAArD,CAAf;QACAP,IAAI,CAACC,OAAL,CAAagB,KAAb;QACF;;MACA,KAAKH,CAAC,CAACE,OAAF,KAAc,EAAd,IAAoBT,GAAG,GAAG,CAA/B;QACEP,IAAI,CAACC,OAAL,GAAeC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,EAA+CI,GAAG,GAAG,CAArD,CAAf;QACAP,IAAI,CAACC,OAAL,CAAagB,KAAb;QACF;;MACA,KAAKH,CAAC,CAACE,OAAF,KAAc,EAAd,IAAoBT,GAAG,GAAG,EAA/B;QACEP,IAAI,CAACC,OAAL,GAAeC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,EAA+CI,GAAG,GAAG,CAArD,CAAf;QACAP,IAAI,CAACC,OAAL,CAAagB,KAAb;QACF;;MACA,KAAKH,CAAC,CAACE,OAAF,KAAc,EAAd,IAAoBT,GAAG,GAAG,EAA/B;QACEP,IAAI,CAACC,OAAL,GAAeC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,EAA+CI,GAAG,GAAG,CAArD,CAAf;QACAP,IAAI,CAACC,OAAL,CAAagB,KAAb;QACF;;MACA,KAAKH,CAAC,CAACI,GAAF,IAAS,CAAT,IAAcJ,CAAC,CAACI,GAAF,IAAS,CAAvB,IAA4BC,KAAK,CAACC,QAAQ,CAAChB,SAAS,CAACG,GAAD,CAAV,CAAT,CAAtC;QACEL,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,EAA+CI,GAA/C,EAAoDc,SAApD,GAAgEP,CAAC,CAACI,GAAlE;QACAb,MAAM,CAACE,GAAD,CAAN,GAAca,QAAQ,CAACN,CAAC,CAACI,GAAH,CAAtB;QACAI,aAAa;QACf;;MACD,KAAK,CAACR,CAAC,CAACE,OAAF,KAAc,EAAd,IAAoBF,CAAC,CAACE,OAAF,KAAc,CAAnC,KAA0CD,UAAU,CAACM,SAAX,IAAwBjB,SAAS,CAACG,GAAD,CAAhF;QACAL,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,EAA+CI,GAA/C,EAAoDc,SAApD,GAAgE,EAAhE;QACC;;MAEF;QACEV,OAAO,CAACC,GAAR,CAAYE,CAAZ;IA3BA;EA6BH;;EAEC,SAASS,UAAT,CAAoBC,KAApB,EAA0B;IAExB,KAAI,IAAIf,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGe,KAAK,CAACd,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;MACnC,KAAI,IAAIgB,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGD,KAAK,CAACf,CAAD,CAAL,CAASC,MAA3B,EAAmCe,CAAC,EAApC,EAAuC;QAErC,IAAGD,KAAK,CAACf,CAAD,CAAL,CAASgB,CAAT,MAAgB,CAAnB,EAAqB;UAAErB,SAAS,CAACsB,IAAV,CAAe,IAAf;QAAqB,CAA5C,MACK;UAACtB,SAAS,CAACsB,IAAV,CAAeF,KAAK,CAACf,CAAD,CAAL,CAASgB,CAAT,CAAf;QAA4B;MACnC;IACF;;IACCpB,MAAM,GAAG,CAAC,GAAGD,SAAJ,CAAT,CATsB,CAUvB;;IACD,OAAOA,SAAS,CAACuB,GAAV,CAAc,CAACC,IAAD,EAAOrB,GAAP,kBACnB;MAEE,EAAE,EAAEA,GAFN;MAGE,GAAG,EAAEP,IAAI,CAACO,GAAD,CAHX;MAIE,QAAQ,EAAC,GAJX;MAKE,SAAS,EAAC,aALZ;MAME,OAAO,EAAGO,CAAD,IAAOe,IAAI,CAACf,CAAD,EAAGP,GAAH,CANtB;MAOE,SAAS,EAAGO,CAAD,IAAOD,cAAc,CAACC,CAAD,EAAGP,GAAH,CAPlC;MAAA,UAUGqB;IAVH,GACOrB,GADP;MAAA;MAAA;MAAA;IAAA,QADK,CAAP;EAeD;;EAEH,IAAIiB,KAAK,GAAGD,UAAU,CAAChC,KAAK,CAACuC,YAAP,CAAtB;;EAEA,SAASD,IAAT,CAAcf,CAAd,EAAgBP,GAAhB,EAAoB;IAClBI,OAAO,CAACC,GAAR,CAAYL,GAAZ,EADkB,CAElB;IACF;IACA;;IACAP,IAAI,CAACC,OAAL,GAAeC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,EAA+CI,GAA/C,CAAf;IACAP,IAAI,CAACC,OAAL,CAAagB,KAAb;EACC;;EAED,SAASc,KAAT,GAAgB;IACf;IACA;IACA,IAAIC,WAAW,GAAGzC,KAAK,CAACyC,WAAxB;IACAA,WAAW,GAAGA,WAAW,CAACC,IAAZ,EAAd,CAJe,CAKf;;IACC,MAAMC,MAAM,GAAGhC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,CAAf;IAEA,IAAIgC,OAAO,GAAG,EAAd;;IACA,KAAI,IAAI1B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGyB,MAAM,CAACxB,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;MAEpC,IAAI2B,IAAI,GAAGF,MAAM,CAACzB,CAAD,CAAN,CAAUY,SAArB;;MACA,IAAIe,IAAI,KAAK,EAAb,EAAgB;QACbA,IAAI,GAAGF,MAAM,CAACzB,CAAD,CAAN,CAAUY,SAAjB;QACDc,OAAO,CAACT,IAAR,CAAaU,IAAb;MACD,CAHD,MAGM;QACHA,IAAI,GAAGF,MAAM,CAACzB,CAAD,CAAN,CAAUY,SAAjB;QACDc,OAAO,CAACT,IAAR,CAAaN,QAAQ,CAACgB,IAAD,CAArB;MACD;IAEF;;IAED,IAAGC,IAAI,CAACC,SAAL,CAAeN,WAAf,KAA+BK,IAAI,CAACC,SAAL,CAAeH,OAAf,CAAlC,EAA0D;MACxDxB,OAAO,CAACC,GAAR,CAAY,YAAZ;MACAD,OAAO,CAACC,GAAR,CAAYpB,KAAZ;IACD,CAHD,MAGM;MACJmB,OAAO,CAACC,GAAR,CAAYpB,KAAZ;IAED,CA5Ba,CA8BhB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EACC,CAxIoB,CA4IrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAIE,SAAS8B,aAAT,GAAwB;IACtB,IAAIU,WAAW,GAAGzC,KAAK,CAACyC,WAAxB;IACHA,WAAW,GAAGA,WAAW,CAACC,IAAZ,EAAd,CAFyB,CAGzB;;IACC,MAAMM,OAAO,GAAGrC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,CAAhB;IAEA,IAAIgC,OAAO,GAAG,EAAd;;IACA,KAAI,IAAI1B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG8B,OAAO,CAAC7B,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;MACrC,IAAI2B,IAAI,GAAGG,OAAO,CAAC9B,CAAD,CAAP,CAAWY,SAAtB;;MACA,IAAIe,IAAI,KAAK,EAAb,EAAgB;QACbA,IAAI,GAAGG,OAAO,CAAC9B,CAAD,CAAP,CAAWY,SAAlB;QACDc,OAAO,CAACT,IAAR,CAAaU,IAAb;MACD,CAHD,MAGM;QACHA,IAAI,GAAGG,OAAO,CAAC9B,CAAD,CAAP,CAAWY,SAAlB;QACDc,OAAO,CAACT,IAAR,CAAaN,QAAQ,CAACgB,IAAD,CAArB;MACD;IACF;;IAED,IAAGC,IAAI,CAACC,SAAL,CAAeN,WAAf,KAA+BK,IAAI,CAACC,SAAL,CAAeH,OAAf,CAAlC,EAA0D;MACxDxB,OAAO,CAACC,GAAR,CAAY,YAAZ;MACArB,KAAK,CAACiD,WAAN,CAAkBvC,OAAO,IAAI,CAACA,OAA9B,EAFwD,CAGxD;IAEC,CALH,MAKS;MACNU,OAAO,CAACC,GAAR,CAAY,MAAZ;IACF;EACA;;EACD,MAAM6B,WAAW,GAAG,MAAM;IAExBlD,KAAK,CAACiD,WAAN,CAAkBvC,OAAO,IAAI,CAACA,OAA9B;EACD,CAHD;;EAKFf,SAAS,CAAC,MAAM;IACfoC,aAAa;EACb,CAFQ,EAEP,EAFO,CAAT;EAIApC,SAAS,CAAC,MAAM;IAEd,IAAGkB,SAAS,CAACM,MAAV,GAAmB,CAAtB,EAAwB;MACtBC,OAAO,CAACC,GAAR,CAAY,iBAAZ;MACAZ,IAAI,CAACC,OAAL,GAAeC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,EAA+C,CAA/C,CAAf;MACAH,IAAI,CAACC,OAAL,CAAagB,KAAb;IACD;EAEF,CARQ,EAQP,CAACb,SAAD,CARO,CAAT;EAUAlB,SAAS,CAAC,MAAM,CAKf,CALQ,EAKP,EALO,CAAT;EAOA,oBACI;IAAK,SAAS,EAAC,wBAAf;IAAA,wBACA;MAAK,SAAS,EAAC,gBAAf;MAAA,UACGsC;IADH;MAAA;MAAA;MAAA;IAAA,QADA,eAIA;MAAK,SAAS,EAAC,gBAAf;MAAA,uBACA,QAAC,QAAD;QACI,kBAAkB,EAAEjC,KAAK,CAACmD,kBAD9B;QAEI,OAAO,EAAE1C,IAFb;QAGI,SAAS,EAAEI,SAHf;QAII,aAAa,EAAEkB,aAJnB;QAKI,YAAY,EAAE/B,KAAK,CAACoD,YALxB;QAMI,SAAS,EAAEpD,KAAK,CAACqD,SANrB;QAOI,QAAQ,EAAErD,KAAK,CAACsD,QAPpB;QAQI,WAAW,EAAEtD,KAAK,CAACuD,WARvB;QASI,eAAe,EAAEvD,KAAK,CAACwD;MAT3B;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA,QAJA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAyBC;;GAhPQzD,K;;KAAAA,K;AAiPT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}