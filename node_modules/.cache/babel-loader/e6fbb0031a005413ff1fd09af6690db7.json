{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\devProjects\\\\sudokuManiac\\\\sudoku_app\\\\src\\\\components\\\\SudokuBoard.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SudokuBoard() {\n  function generateBoard() {\n    let board = new Array(9).fill(new Array(9).fill(0));\n    let nextZero = FindZero(board); // //Base case - if there are no zero´s on the board, return board\n    // if(nextZero === null){\n    //   return board;\n    // } \n    // // Recursive case - \n    // else {\n    //   let row = nextZero[0];\n    //   let col = nextZero[1];\n    //   \n    // }\n\n    rndNumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    shuffle(rndNumbers);\n\n    for (let i = 0; i < 3; i++) {\n      for (let k = 0; k < 3; k++) {\n        solved[i][k] = rndNumbers[0];\n        rndNumbers.shift();\n      }\n    }\n  }\n\n  function FindZero(board) {\n    //finds next 0 on board and returns its location//\n    let zeroPlacement = [];\n\n    for (let i = 0; i < board.length; i++) {\n      for (let j = 0; j < board[i].length; j++) {\n        if (board[i][j] === 0) {\n          zeroPlacement.push(i);\n          zeroPlacement.push(j);\n          return zeroPlacement;\n        }\n\n        if (zeroPlacement.length !== 0) {\n          return null;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  function IsValidPlacement(row, col, value, board) {\n    // 3 if statements, nr. 1 checks for horizontal duplicates. Nr 2 = Vertical duplicates. Nr 3 = 3x3 block duplicated\n    for (let i = 0; i < board.length; i++) {\n      if (board[row][i] === value) {\n        return false;\n      }\n\n      if (board[i][col] === value) {\n        return false;\n      }\n\n      if (board[Math.floor(row - row % 3 + i / 3)][Math.floor(col - col % 3 + i % 3)] === value) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: generateBoard,\n      children: \"h\\xE6 \\xE9g er board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = SudokuBoard;\nexport default SudokuBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SudokuBoard\");","map":{"version":3,"names":["React","SudokuBoard","generateBoard","board","Array","fill","nextZero","FindZero","rndNumbers","shuffle","i","k","solved","shift","zeroPlacement","length","j","push","IsValidPlacement","row","col","value","Math","floor"],"sources":["C:/Users/User/Documents/devProjects/sudokuManiac/sudoku_app/src/components/SudokuBoard.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction SudokuBoard(){\r\n  function generateBoard(){\r\n    let board  = new Array(9).fill(new Array(9).fill(0));\r\n    let nextZero = FindZero(board)\r\n    \r\n   // //Base case - if there are no zero´s on the board, return board\r\n   // if(nextZero === null){\r\n   //   return board;\r\n   // } \r\n   // // Recursive case - \r\n   // else {\r\n   //   let row = nextZero[0];\r\n   //   let col = nextZero[1];\r\n   //   \r\n   // }\r\n   rndNumbers = [1,2,3,4,5,6,7,8,9];\r\n   shuffle(rndNumbers);\r\n   for(let i = 0; i < 3; i++){\r\n     for(let k = 0; k < 3; k++){  \r\n      solved[i][k] = rndNumbers[0]\r\n    rndNumbers.shift();\r\n     }\r\n   }\r\n\r\n     \r\n\r\n}\r\n\r\nfunction FindZero(board){\r\n  //finds next 0 on board and returns its location//\r\n  let zeroPlacement = [];\r\n    for(let i = 0; i < board.length; i++){\r\n      for(let j = 0; j < board[i].length; j++){\r\n        if(board[i][j] === 0){\r\n          zeroPlacement.push(i);\r\n          zeroPlacement.push(j);\r\n          return zeroPlacement;\r\n          }\r\n          if(zeroPlacement.length !== 0){\r\n            return null;\r\n          }\r\n      }\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction IsValidPlacement(row,col,value, board){\r\n  // 3 if statements, nr. 1 checks for horizontal duplicates. Nr 2 = Vertical duplicates. Nr 3 = 3x3 block duplicated\r\n   for(let i = 0; i < board.length; i++){\r\n    \r\n     if (board[row][i] === value)\r\n         {\r\n           return false;\r\n         }\r\n     if (board[i][col] === value)\r\n         {\r\n           return false;\r\n         }\r\n     if (board[Math.floor((row - row % 3) + i / 3)][Math.floor((col - col % 3) + i % 3)] === value)\r\n         {\r\n           return false;\r\n         }\r\n   }\r\n   return true;\r\n }\r\n\r\n  return(\r\n    <>\r\n      <h2 onClick={generateBoard}>hæ ég er board</h2>\r\n    </>\r\n  )\r\n}\r\nexport default SudokuBoard;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,WAAT,GAAsB;EACpB,SAASC,aAAT,GAAwB;IACtB,IAAIC,KAAK,GAAI,IAAIC,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,IAAID,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,CAAlB,CAAlB,CAAb;IACA,IAAIC,QAAQ,GAAGC,QAAQ,CAACJ,KAAD,CAAvB,CAFsB,CAIvB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACAK,UAAU,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,CAAb;IACAC,OAAO,CAACD,UAAD,CAAP;;IACA,KAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;MACxB,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;QACzBC,MAAM,CAACF,CAAD,CAAN,CAAUC,CAAV,IAAeH,UAAU,CAAC,CAAD,CAAzB;QACFA,UAAU,CAACK,KAAX;MACE;IACF;EAIH;;EAED,SAASN,QAAT,CAAkBJ,KAAlB,EAAwB;IACtB;IACA,IAAIW,aAAa,GAAG,EAApB;;IACE,KAAI,IAAIJ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGP,KAAK,CAACY,MAAzB,EAAiCL,CAAC,EAAlC,EAAqC;MACnC,KAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGb,KAAK,CAACO,CAAD,CAAL,CAASK,MAA5B,EAAoCC,CAAC,EAArC,EAAwC;QACtC,IAAGb,KAAK,CAACO,CAAD,CAAL,CAASM,CAAT,MAAgB,CAAnB,EAAqB;UACnBF,aAAa,CAACG,IAAd,CAAmBP,CAAnB;UACAI,aAAa,CAACG,IAAd,CAAmBD,CAAnB;UACA,OAAOF,aAAP;QACC;;QACD,IAAGA,aAAa,CAACC,MAAd,KAAyB,CAA5B,EAA8B;UAC5B,OAAO,IAAP;QACD;MACJ;IACF;;IACD,OAAO,IAAP;EACH;;EAED,SAASG,gBAAT,CAA0BC,GAA1B,EAA8BC,GAA9B,EAAkCC,KAAlC,EAAyClB,KAAzC,EAA+C;IAC7C;IACC,KAAI,IAAIO,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGP,KAAK,CAACY,MAAzB,EAAiCL,CAAC,EAAlC,EAAqC;MAEnC,IAAIP,KAAK,CAACgB,GAAD,CAAL,CAAWT,CAAX,MAAkBW,KAAtB,EACI;QACE,OAAO,KAAP;MACD;;MACL,IAAIlB,KAAK,CAACO,CAAD,CAAL,CAASU,GAAT,MAAkBC,KAAtB,EACI;QACE,OAAO,KAAP;MACD;;MACL,IAAIlB,KAAK,CAACmB,IAAI,CAACC,KAAL,CAAYJ,GAAG,GAAGA,GAAG,GAAG,CAAb,GAAkBT,CAAC,GAAG,CAAjC,CAAD,CAAL,CAA2CY,IAAI,CAACC,KAAL,CAAYH,GAAG,GAAGA,GAAG,GAAG,CAAb,GAAkBV,CAAC,GAAG,CAAjC,CAA3C,MAAoFW,KAAxF,EACI;QACE,OAAO,KAAP;MACD;IACN;;IACD,OAAO,IAAP;EACD;;EAEA,oBACE;IAAA,uBACE;MAAI,OAAO,EAAEnB,aAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAKD;;KAvEQD,W;AAwET,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}