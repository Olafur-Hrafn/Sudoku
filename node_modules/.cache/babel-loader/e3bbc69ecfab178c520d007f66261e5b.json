{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\devProjects\\\\sudokuManiac\\\\sudoku_app\\\\src\\\\components\\\\SudokuBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport './SudokuBoard.css';\nimport Controls from '../components/Controls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  _s();\n\n  const [state, SetState] = useState(false);\n  let refs = useRef(null);\n  refs.current = document.getElementsByClassName(\"SudokuBlock\")[2];\n  let liveBoard = [];\n  let anwser = [];\n  let currentBox = \"hm\"; // Movement section: track user input and change div focus and insert or delete from innerText\n\n  function handleMovement(e, idx) {\n    currentBox = document.getElementsByClassName(\"SudokuBlock\")[idx];\n\n    switch (true) {\n      case e.keyCode === 38 && idx > 8:\n        refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx - 9];\n        refs.current.focus();\n        break;\n\n      case e.keyCode === 37 && idx > 0:\n        refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx - 1];\n        refs.current.focus();\n        break;\n\n      case e.keyCode === 39 && idx < 80:\n        refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx + 1];\n        refs.current.focus();\n        break;\n\n      case e.keyCode === 40 && idx < 72:\n        refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx + 9];\n        refs.current.focus();\n        break;\n\n      case e.key >= 1 && e.key <= 9 && isNaN(parseInt(liveBoard[idx])):\n        document.getElementsByClassName(\"SudokuBlock\")[idx].innerText = e.key;\n        anwser[idx] = parseInt(e.key);\n        break;\n\n      case (e.keyCode === 46 || e.keyCode === 8) && currentBox.innerText != liveBoard[idx]:\n        document.getElementsByClassName(\"SudokuBlock\")[idx].innerText = '';\n        break;\n\n      default:\n        console.log(e);\n    }\n  }\n\n  function printBoard(board) {\n    for (let i = 0; i < board.length; i++) {\n      for (let j = 0; j < board[i].length; j++) {\n        if (board[i][j] === 0) {\n          liveBoard.push('  ');\n        } else {\n          liveBoard.push(board[i][j]);\n        }\n      }\n    }\n\n    anwser = [...liveBoard];\n    return liveBoard.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: refs[idx],\n      tabIndex: \"0\",\n      className: \"SudokuBlock\",\n      onClick: e => test(e, idx),\n      onKeyDown: e => handleMovement(e, idx),\n      children: item\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this));\n  }\n\n  let board = printBoard(props.currentBoard);\n\n  function test(e, idx) {\n    console.log(idx); //let x = e.target.__reactFiber$km7ltcxneuo.index\n    //console.log(x)\n    //let divIndex = e.target.__reactFiber$km7ltcxneuo.index;\n\n    refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx];\n    refs.current.focus();\n  }\n\n  function solve() {\n    //let arr1 = [1,2,3]\n    //let arr2 = [1,2,3]\n    let solvedBoard = props.solvedBoard;\n    solvedBoard = solvedBoard.flat();\n\n    if (solvedBoard.length === anwser.length) {\n      return solvedBoard.every((element, index) => {\n        if (element === anwser[index]) {\n          console.log(\"Sudoku board solved\");\n        }\n      });\n    } else {\n      console.log(\"not solved\");\n    }\n  }\n\n  function handler(e) {\n    console.log(e.keyCode); //refs.current = e.target;\n    //e.target.focus();\n    //console.log(e)\n    //let divIndex = e.path[0].__reactFiber$nv6lose87zk.key;\n    //refs.current = document.getElementsByClassName(\"SudokuBlock\")[divIndex];\n    //refs.current.focus();\n  }\n\n  useEffect(() => {//window.addEventListener(\"click\", handler)\n    //window.addEventListener(\"click\", event => {\n    //  console.log(event.keyCode);\n    //});\n  });\n  useEffect(() => {\n    if (liveBoard.length > 1) {\n      console.log(\"liveBoard is up\");\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[2];\n      refs.current.focus();\n    }\n  }, [liveBoard]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BoardAndControllerWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BoardContainer\",\n      children: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Controls, {\n        SetDifficultyLevel: props.SetDifficultyLevel,\n        currentBox: currentBox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"Q0XXfptEekR1wHD25a8yHr2EWTw=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Controls","Board","props","state","SetState","refs","current","document","getElementsByClassName","liveBoard","anwser","currentBox","handleMovement","e","idx","keyCode","focus","key","isNaN","parseInt","innerText","console","log","printBoard","board","i","length","j","push","map","item","test","currentBoard","solve","solvedBoard","flat","every","element","index","handler","SetDifficultyLevel"],"sources":["C:/Users/User/Documents/devProjects/sudokuManiac/sudoku_app/src/components/SudokuBoard.js"],"sourcesContent":["import React, {useEffect, useState,useRef} from \"react\";\r\nimport './SudokuBoard.css';\r\nimport Controls from '../components/Controls'\r\n\r\n\r\nfunction Board(props){\r\n  const [state,SetState] = useState(false);\r\n  \r\n  let refs = useRef(null);\r\n  refs.current = document.getElementsByClassName(\"SudokuBlock\")[2];\r\n  let liveBoard = [];\r\n  let anwser = []; \r\n  let currentBox = \"hm\"\r\n  \r\n \r\n  // Movement section: track user input and change div focus and insert or delete from innerText\r\n   function handleMovement (e,idx){\r\n     currentBox = document.getElementsByClassName(\"SudokuBlock\")[idx];\r\n    switch(true) {\r\n    case e.keyCode === 38 && idx > 8:\r\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx - 9]\r\n      \r\n      refs.current.focus();\r\n    break;\r\n    case e.keyCode === 37 && idx > 0:\r\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx - 1]\r\n      refs.current.focus();\r\n    break;\r\n    case e.keyCode === 39 && idx < 80:\r\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx + 1]\r\n      refs.current.focus();\r\n    break;\r\n    case e.keyCode === 40 && idx < 72:\r\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx + 9]\r\n      refs.current.focus();\r\n    break;\r\n    case e.key >= 1 && e.key <= 9 && isNaN(parseInt(liveBoard[idx])):\r\n      document.getElementsByClassName(\"SudokuBlock\")[idx].innerText = e.key;\r\n      anwser[idx] = parseInt(e.key);\r\n    break;\r\n   case (e.keyCode === 46 || e.keyCode === 8)  && currentBox.innerText != liveBoard[idx]:  \r\n   document.getElementsByClassName(\"SudokuBlock\")[idx].innerText = '';\r\n    break;\r\n    \r\n  default:\r\n    console.log(e)\r\n}\r\n}\r\n\r\n  function printBoard(board){\r\n\r\n    for(let i = 0; i < board.length; i++){\r\n      for(let j =0; j < board[i].length; j++){\r\n        \r\n        if(board[i][j] === 0){ liveBoard.push('  ')}\r\n        else {liveBoard.push(board[i][j])}\r\n      }\r\n    }\r\n      anwser = [...liveBoard];\r\n    return liveBoard.map((item, idx) => ( \r\n      <div\r\n        key={idx}\r\n        ref={refs[idx]}\r\n        tabIndex='0'\r\n        className='SudokuBlock'\r\n        onClick={(e) => test(e,idx)}\r\n        onKeyDown={(e) => handleMovement(e,idx)}\r\n        \r\n      >\r\n        {item}\r\n      </div>\r\n    ));\r\n      \r\n  }\r\n   \r\nlet board = printBoard(props.currentBoard)\r\n\r\nfunction test(e,idx){\r\n  console.log(idx);\r\n  //let x = e.target.__reactFiber$km7ltcxneuo.index\r\n//console.log(x)\r\n//let divIndex = e.target.__reactFiber$km7ltcxneuo.index;\r\nrefs.current = document.getElementsByClassName(\"SudokuBlock\")[idx]\r\n      refs.current.focus();\r\n}\r\n\r\nfunction solve(){\r\n //let arr1 = [1,2,3]\r\n //let arr2 = [1,2,3]\r\n let solvedBoard = props.solvedBoard;\r\n solvedBoard = solvedBoard.flat()\r\n\r\n  if (solvedBoard.length === anwser.length) {\r\n    return solvedBoard.every((element, index) => {\r\n      if (element === anwser[index]) {\r\n        console.log(\"Sudoku board solved\")\r\n      }\r\n    });\r\n  } else {\r\n    console.log(\"not solved\");\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction handler(e){\r\n  console.log(e.keyCode);\r\n  //refs.current = e.target;\r\n  //e.target.focus();\r\n  //console.log(e)\r\n  //let divIndex = e.path[0].__reactFiber$nv6lose87zk.key;\r\n  //refs.current = document.getElementsByClassName(\"SudokuBlock\")[divIndex];\r\n  //refs.current.focus();\r\n}\r\n\r\nuseEffect(() => {\r\n//window.addEventListener(\"click\", handler)\r\n//window.addEventListener(\"click\", event => {\r\n//  console.log(event.keyCode);\r\n//});\r\n})\r\n\r\nuseEffect(() => {\r\n\r\n\r\n  if(liveBoard.length > 1){\r\n    console.log(\"liveBoard is up\");\r\n    refs.current = document.getElementsByClassName(\"SudokuBlock\")[2];\r\n    refs.current.focus();\r\n  }\r\n  \r\n},[liveBoard])\r\n  \r\nreturn(\r\n    <div className=\"BoardAndControllerWrap\">\r\n    <div className=\"BoardContainer\">\r\n      {board}\r\n    </div>\r\n    <div>\r\n    <Controls\r\n        SetDifficultyLevel={props.SetDifficultyLevel} \r\n        currentBox={currentBox}\r\n      />\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module"}