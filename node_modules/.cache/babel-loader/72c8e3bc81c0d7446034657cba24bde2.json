{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\devProjects\\\\sudokuManiac\\\\sudoku_app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SudokuBrain from \"./components/SudokuBrain\";\nimport SudokuBoard from \"./components/SudokuBoard\";\nimport '../src/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [solvedBoard, SetSolvedBoard] = useState([]);\n  const [difficultyLevel, SetDifficultyLevel] = useState(1);\n  const [currentBoard, SetCurrentBoard] = useState([]);\n  const [darkTheme, SetDarkTheme] = useState(false); // heldur utan um tilraunir innan í sudokuBoard, þannig að það sé hægt að gera check anwser\n\n  const [userAttempt, SetUserAttempt] = useState([]); // solvedBoard sent inn í sudokubrain fyrir solve algoritma og send inn í sudokuBoard til að prenta eftir völdu erfiðleika stigi.\n  //starting board þarf líklega ekki að vera í App, mætti vera bara inn í Sudoku Brain\n  //const [startingBoard,SetStartingBoard] = useState([])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: darkTheme ? \"dark-theme\" : \"light-theme\",\n    children: [/*#__PURE__*/_jsxDEV(SudokuBoard, {\n      solvedBoard: solvedBoard,\n      difficultyLevel: difficultyLevel,\n      userAttempt: userAttempt,\n      SetUserAttempt: SetUserAttempt,\n      currentBoard: currentBoard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SudokuBrain, {\n      solvedBoard: solvedBoard,\n      SetSolvedBoard: SetSolvedBoard,\n      SetDifficultyLevel: SetDifficultyLevel,\n      difficultyLevel: difficultyLevel,\n      currentBoard: currentBoard,\n      SetCurrentBoard: SetCurrentBoard // startingBoard={startingBoard}\n      // SetStartingBoard={SetStartingBoard}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => SetDarkTheme(!darkTheme),\n      children: \"dark theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XcgnQTltKmISerNQfhvWWUsUaV4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SudokuBrain","SudokuBoard","App","solvedBoard","SetSolvedBoard","difficultyLevel","SetDifficultyLevel","currentBoard","SetCurrentBoard","darkTheme","SetDarkTheme","userAttempt","SetUserAttempt"],"sources":["C:/Users/User/Documents/devProjects/sudokuManiac/sudoku_app/src/App.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport SudokuBrain from \"./components/SudokuBrain\";\nimport SudokuBoard from \"./components/SudokuBoard\";\nimport '../src/'\n\nfunction App() {\n  const [solvedBoard,SetSolvedBoard] = useState([])\n  const [difficultyLevel, SetDifficultyLevel] = useState(1)\n  const [currentBoard, SetCurrentBoard] = useState([])\n  const [darkTheme, SetDarkTheme] = useState(false)\n\n  // heldur utan um tilraunir innan í sudokuBoard, þannig að það sé hægt að gera check anwser\n  const [userAttempt, SetUserAttempt] = useState([])\n  // solvedBoard sent inn í sudokubrain fyrir solve algoritma og send inn í sudokuBoard til að prenta eftir völdu erfiðleika stigi.\n  \n  //starting board þarf líklega ekki að vera í App, mætti vera bara inn í Sudoku Brain\n  //const [startingBoard,SetStartingBoard] = useState([])\n\n\n  \n  return (\n    <div className={darkTheme ? \"dark-theme\" : \"light-theme\"}>\n      <SudokuBoard\n        solvedBoard={solvedBoard}\n        difficultyLevel={difficultyLevel}\n        userAttempt={userAttempt}\n        SetUserAttempt={SetUserAttempt}\n        currentBoard={currentBoard}\n\n\n      />\n      <SudokuBrain\n        solvedBoard={solvedBoard}\n        SetSolvedBoard={SetSolvedBoard}\n        SetDifficultyLevel={SetDifficultyLevel}\n        difficultyLevel={difficultyLevel}\n        currentBoard={currentBoard}\n        SetCurrentBoard={SetCurrentBoard}\n       // startingBoard={startingBoard}\n       // SetStartingBoard={SetStartingBoard}\n      />\n      <button onClick={() => SetDarkTheme(!darkTheme)}>dark theme</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAO,SAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BL,QAAQ,CAAC,EAAD,CAA7C;EACA,MAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,CAAD,CAAtD;EACA,MAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C,CAJa,CAMb;;EACA,MAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C,CAPa,CAQb;EAEA;EACA;;EAIA,oBACE;IAAK,SAAS,EAAEU,SAAS,GAAG,YAAH,GAAkB,aAA3C;IAAA,wBACE,QAAC,WAAD;MACE,WAAW,EAAEN,WADf;MAEE,eAAe,EAAEE,eAFnB;MAGE,WAAW,EAAEM,WAHf;MAIE,cAAc,EAAEC,cAJlB;MAKE,YAAY,EAAEL;IALhB;MAAA;MAAA;MAAA;IAAA,QADF,eAUE,QAAC,WAAD;MACE,WAAW,EAAEJ,WADf;MAEE,cAAc,EAAEC,cAFlB;MAGE,kBAAkB,EAAEE,kBAHtB;MAIE,eAAe,EAAED,eAJnB;MAKE,YAAY,EAAEE,YALhB;MAME,eAAe,EAAEC,eANnB,CAOC;MACA;;IARD;MAAA;MAAA;MAAA;IAAA,QAVF,eAoBE;MAAQ,OAAO,EAAE,MAAME,YAAY,CAAC,CAACD,SAAF,CAAnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QApBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD;;GAvCQP,G;;KAAAA,G;AAyCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}