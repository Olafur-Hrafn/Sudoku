{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\devProjects\\\\sudokuManiac\\\\sudoku_app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport useLocalStorage from 'use-local-storage';\nimport SudokuBrain from \"./components/SudokuBrain\";\nimport SudokuBoard from \"./components/SudokuBoard\";\nimport SolvedScreen from \"./components/SolvedScreen\";\nimport '../src/components/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [theme, setTheme] = useLocalStorage('theme' ? 'dark' : 'light');\n  const [solvedBoard, SetSolvedBoard] = useState([]);\n  const [difficultyLevel, SetDifficultyLevel] = useState(1);\n  const [currentBoard, SetCurrentBoard] = useState([]);\n  const [userAttempt, SetUserAttempt] = useState([]);\n  const [darkTheme, SetDarkTheme] = useState(false);\n  const [currentRef, SetCurrentRef] = useState(null);\n  const [isSolved, SetIsSolved] = useState(false);\n  const [scoreCard, SetScoreCard] = useState({\n    time: 0\n  });\n\n  const switchTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: darkTheme ? \"dark-theme\" : \"light-theme\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sudoku Maniac\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(SolvedScreen, {\n        isSolved: isSolved,\n        scoreCard: scoreCard,\n        difficultyLevel: difficultyLevel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sudokuBoardWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(SudokuBoard, {\n            solvedBoard: solvedBoard,\n            difficultyLevel: difficultyLevel,\n            SetDifficultyLevel: SetDifficultyLevel,\n            userAttempt: userAttempt,\n            SetUserAttempt: SetUserAttempt,\n            currentBoard: currentBoard,\n            SetCurrentRef: SetCurrentRef,\n            SetIsSolved: SetIsSolved,\n            isSolved: isSolved,\n            SetScoreCard: SetScoreCard,\n            scoreCard: scoreCard,\n            isSolved: isSolved\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controlWrapper\",\n          children: /*#__PURE__*/_jsxDEV(SudokuBrain, {\n            solvedBoard: solvedBoard,\n            SetSolvedBoard: SetSolvedBoard,\n            SetDifficultyLevel: SetDifficultyLevel,\n            difficultyLevel: difficultyLevel,\n            currentBoard: currentBoard,\n            SetCurrentBoard: SetCurrentBoard,\n            SetIsSolved: SetIsSolved\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => SetDarkTheme(!darkTheme),\n      children: \"dark theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1Mi5mP2w659IM2Yek49eg8IV6uE=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useLocalStorage","SudokuBrain","SudokuBoard","SolvedScreen","App","theme","setTheme","solvedBoard","SetSolvedBoard","difficultyLevel","SetDifficultyLevel","currentBoard","SetCurrentBoard","userAttempt","SetUserAttempt","darkTheme","SetDarkTheme","currentRef","SetCurrentRef","isSolved","SetIsSolved","scoreCard","SetScoreCard","time","switchTheme","newTheme"],"sources":["C:/Users/User/Documents/devProjects/sudokuManiac/sudoku_app/src/App.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport useLocalStorage from 'use-local-storage'\nimport SudokuBrain from \"./components/SudokuBrain\";\nimport SudokuBoard from \"./components/SudokuBoard\";\nimport SolvedScreen from \"./components/SolvedScreen\";\nimport '../src/components/styles.css'\n\n\nfunction App() {\n  const [theme, setTheme] = useLocalStorage('theme' ? 'dark' : 'light')\n  const [solvedBoard,SetSolvedBoard] = useState([])\n  const [difficultyLevel, SetDifficultyLevel] = useState(1)\n  const [currentBoard, SetCurrentBoard] = useState([])\n  const [userAttempt, SetUserAttempt] = useState([])\n  const [darkTheme, SetDarkTheme] = useState(false)\n  const [currentRef, SetCurrentRef] = useState(null)\n  const [isSolved,SetIsSolved] = useState(false);\n  const [scoreCard,SetScoreCard] = useState({time:0})\n\n  const switchTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light'\n  }\n\n  return (\n    <div className={darkTheme ? \"dark-theme\" : \"light-theme\"}>\n    <div className=\"title\"><h1>Sudoku Maniac</h1></div>\n    <div className=\"\">\n    \n    <SolvedScreen\n      isSolved={isSolved}\n      scoreCard={scoreCard}\n      difficultyLevel={difficultyLevel}\n    />\n\n      <div className=\"sudokuBoardWrapper\">\n      <div>\n      <SudokuBoard\n        solvedBoard={solvedBoard}\n        difficultyLevel={difficultyLevel}\n        SetDifficultyLevel={SetDifficultyLevel}\n        userAttempt={userAttempt}\n        SetUserAttempt={SetUserAttempt}\n        currentBoard={currentBoard}\n        SetCurrentRef={SetCurrentRef}\n        SetIsSolved={SetIsSolved}\n        isSolved={isSolved}\n        SetScoreCard={SetScoreCard}\n        scoreCard={scoreCard}\n        isSolved={isSolved}\n\n      />\n      </div>\n\n      <div className=\"controlWrapper\">\n      \n      \n      <SudokuBrain\n        solvedBoard={solvedBoard}\n        SetSolvedBoard={SetSolvedBoard}\n        SetDifficultyLevel={SetDifficultyLevel}\n        difficultyLevel={difficultyLevel}\n        currentBoard={currentBoard}\n        SetCurrentBoard={SetCurrentBoard}\n        SetIsSolved={SetIsSolved}\n      />\n      </div>\n    </div>\n      </div>\n      \n      <button onClick={() => SetDarkTheme(!darkTheme)}>dark theme</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}