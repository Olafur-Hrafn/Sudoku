{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\devProjects\\\\sudokuManiac\\\\sudoku_app\\\\src\\\\components\\\\SudokuBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef, useContext } from \"react\";\nimport { UserContext } from \"../userContext\";\nimport './styles.css';\nimport Controls from '../components/Controls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  _s();\n\n  const {\n    solvedBoard,\n    currentBoard,\n    SetIsSolved,\n    SetHintCounter\n  } = useContext(UserContext);\n  const [hintsCount, SetHintsCount] = useState(0);\n  let refs = useRef(null);\n  refs.current = document.getElementsByClassName(\"SudokuBlock\")[2];\n  let liveBoard = [];\n  let anwser = [];\n  let hintsFromControls = 0;\n\n  async function handleMovement(e, idx) {\n    let currentBox = document.getElementsByClassName(\"SudokuBlock\")[idx];\n\n    switch (true) {\n      case e.keyCode === 38 && idx > 8:\n        refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx - 9];\n        refs.current.focus();\n        break;\n\n      case e.keyCode === 37 && idx > 0:\n        refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx - 1];\n        refs.current.focus();\n        break;\n\n      case e.keyCode === 39 && idx < 80:\n        refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx + 1];\n        refs.current.focus();\n        break;\n\n      case e.keyCode === 40 && idx < 72:\n        refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx + 9];\n        refs.current.focus();\n        break;\n\n      case e.key >= 1 && e.key <= 9 && isNaN(parseInt(liveBoard[idx])):\n        document.getElementsByClassName(\"SudokuBlock\")[idx].innerText = e.key;\n        anwser[idx] = parseInt(e.key);\n        checkSolution(hintsFromControls);\n        break;\n\n      case (e.keyCode === 46 || e.keyCode === 8) && currentBox.innerText != liveBoard[idx]:\n        document.getElementsByClassName(\"SudokuBlock\")[idx].innerText = '';\n        break;\n\n      default:\n        console.log(e);\n    }\n  }\n\n  function printBoard(board) {\n    for (let i = 0; i < board.length; i++) {\n      for (let j = 0; j < board[i].length; j++) {\n        if (board[i][j] === 0) {\n          liveBoard.push('  ');\n        } else {\n          liveBoard.push(board[i][j]);\n        }\n      }\n    }\n\n    anwser = [...liveBoard]; // const array = anwser.map(a => ({...a}));\n\n    return liveBoard.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: idx,\n      ref: refs[idx],\n      tabIndex: \"0\",\n      className: \"SudokuBlock\",\n      onClick: e => handleClick(e, idx),\n      onKeyDown: e => handleMovement(e, idx),\n      children: item\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this));\n  }\n\n  let board = printBoard(currentBoard);\n\n  function handleClick(e, idx) {\n    // focus clicked div + put as refs.current\n    refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx];\n    refs.current.focus();\n  }\n\n  function updateHints() {}\n\n  function checkSolution(hints) {\n    // check if player has soulution right\n    hintsFromControls = hints;\n    let TempSolvedBoard = solvedBoard;\n    TempSolvedBoard = TempSolvedBoard.flat(); // skíra einhvað annað en blocks  og laga þannig\n\n    const tempArr = document.getElementsByClassName(\"SudokuBlock\");\n    let xAnwser = [];\n\n    for (let i = 0; i < tempArr.length; i++) {\n      let text = tempArr[i].innerText;\n\n      if (text === \"\") {\n        text = tempArr[i].innerText;\n        xAnwser.push(text);\n      } else {\n        text = tempArr[i].innerText;\n        xAnwser.push(parseInt(text));\n      }\n    }\n\n    if (JSON.stringify(TempSolvedBoard) == JSON.stringify(xAnwser)) {\n      console.log(\"yessss Sir\");\n      console.log(hints);\n      SetHintCounter(hintsFromControls);\n      SetIsSolved(current => !current); //handleState();\n    } else {\n      console.log(\"nibb\");\n      console.log(hints);\n    }\n  }\n\n  const handleState = () => {\n    SetIsSolved(current => !current);\n  };\n\n  useEffect(() => {\n    checkSolution();\n  }, []);\n  useEffect(() => {\n    if (liveBoard.length > 1) {\n      console.log(\"liveBoard is up\");\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[2];\n      refs.current.focus();\n    }\n  }, [liveBoard]);\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BoardAndControllerWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BoardContainer\",\n      children: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controlWrapper\",\n      children: /*#__PURE__*/_jsxDEV(Controls, {\n        lastRef: refs,\n        liveBoard: liveBoard,\n        checkSolution: checkSolution,\n        isSolved: props.isSolved,\n        switchTheme: props.switchTheme,\n        updateHints: updateHints,\n        SetHintsCount: SetHintsCount,\n        hintsCount: hintsCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"s9tsaM5HO/f+tDKVuNaVZEQ2xr4=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useContext","UserContext","Controls","Board","props","solvedBoard","currentBoard","SetIsSolved","SetHintCounter","hintsCount","SetHintsCount","refs","current","document","getElementsByClassName","liveBoard","anwser","hintsFromControls","handleMovement","e","idx","currentBox","keyCode","focus","key","isNaN","parseInt","innerText","checkSolution","console","log","printBoard","board","i","length","j","push","map","item","handleClick","updateHints","hints","TempSolvedBoard","flat","tempArr","xAnwser","text","JSON","stringify","handleState","isSolved","switchTheme"],"sources":["C:/Users/User/Documents/devProjects/sudokuManiac/sudoku_app/src/components/SudokuBoard.js"],"sourcesContent":["import React, {useEffect, useState,useRef,useContext} from \"react\";\r\nimport { UserContext } from \"../userContext\";\r\nimport './styles.css'\r\nimport Controls from '../components/Controls'\r\n\r\n\r\nfunction Board(props){\r\n  \r\n  const {solvedBoard,currentBoard,SetIsSolved,SetHintCounter} = useContext(UserContext);\r\n  const [hintsCount, SetHintsCount] = useState(0);\r\n\r\n  let refs = useRef(null);\r\n  refs.current = document.getElementsByClassName(\"SudokuBlock\")[2];\r\n  let liveBoard = [];\r\n  let anwser = []; \r\n  let hintsFromControls = 0;\r\n  \r\n  \r\n   async function handleMovement (e,idx){\r\n    let currentBox = document.getElementsByClassName(\"SudokuBlock\")[idx];\r\n    switch(true) {\r\n    case e.keyCode === 38 && idx > 8:\r\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx - 9]\r\n      refs.current.focus();\r\n    break;\r\n    case e.keyCode === 37 && idx > 0:\r\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx - 1]\r\n      refs.current.focus();\r\n    break;\r\n    case e.keyCode === 39 && idx < 80:\r\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx + 1]\r\n      refs.current.focus();\r\n    break;\r\n    case e.keyCode === 40 && idx < 72:\r\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx + 9]\r\n      refs.current.focus();\r\n    break;\r\n    case e.key >= 1 && e.key <= 9 && isNaN(parseInt(liveBoard[idx])):\r\n      document.getElementsByClassName(\"SudokuBlock\")[idx].innerText = e.key;\r\n      anwser[idx] = parseInt(e.key);\r\n      checkSolution(hintsFromControls);\r\n    break;\r\n   case (e.keyCode === 46 || e.keyCode === 8)  && currentBox.innerText != liveBoard[idx]:  \r\n   document.getElementsByClassName(\"SudokuBlock\")[idx].innerText = '';\r\n    break;\r\n    \r\n  default:\r\n    console.log(e)\r\n}\r\n}\r\n\r\n  function printBoard(board){\r\n\r\n    for(let i = 0; i < board.length; i++){\r\n      for(let j =0; j < board[i].length; j++){\r\n        \r\n        if(board[i][j] === 0){ liveBoard.push('  ')}\r\n        else {liveBoard.push(board[i][j])}\r\n      }\r\n    }\r\n      anwser = [...liveBoard];\r\n     // const array = anwser.map(a => ({...a}));\r\n    return liveBoard.map((item, idx) => ( \r\n      <div\r\n        key={idx}\r\n        id={idx}\r\n        ref={refs[idx]}\r\n        tabIndex='0'\r\n        className='SudokuBlock'\r\n        onClick={(e) => handleClick(e,idx)}\r\n        onKeyDown={(e) => handleMovement(e,idx)}\r\n        \r\n      >\r\n        {item}\r\n      </div>\r\n    ));\r\n      \r\n  }\r\n   \r\nlet board = printBoard(currentBoard)\r\n\r\n\r\nfunction handleClick(e,idx){\r\n// focus clicked div + put as refs.current\r\nrefs.current = document.getElementsByClassName(\"SudokuBlock\")[idx]\r\nrefs.current.focus();\r\n}\r\n\r\n\r\n\r\nfunction updateHints(){\r\n\r\n}\r\n\r\n   function checkSolution(hints){\r\n     // check if player has soulution right\r\n    hintsFromControls = hints;\r\n \r\n  \r\n  let TempSolvedBoard = solvedBoard;\r\n TempSolvedBoard = TempSolvedBoard.flat()\r\n // skíra einhvað annað en blocks  og laga þannig\r\n  const tempArr = document.getElementsByClassName(\"SudokuBlock\");\r\n\r\n  let xAnwser = [];\r\n  for(let i = 0; i < tempArr.length; i++){\r\n    let text = tempArr[i].innerText\r\n    if( text === \"\"){\r\n       text = tempArr[i].innerText;\r\n      xAnwser.push(text);\r\n    } else{\r\n       text = tempArr[i].innerText\r\n      xAnwser.push(parseInt(text))\r\n    }\r\n  }\r\n\r\n  if(JSON.stringify(TempSolvedBoard) == JSON.stringify(xAnwser)){\r\n    console.log(\"yessss Sir\");\r\n    console.log(hints)\r\n    \r\n    SetHintCounter(hintsFromControls);\r\n    SetIsSolved(current => !current)\r\n    //handleState();\r\n    \r\n    } else {\r\n     console.log(\"nibb\");\r\n     console.log(hints)\r\n  }\r\n  }\r\n  const handleState = () => {\r\n    \r\n    SetIsSolved(current => !current);\r\n  };\r\n\r\nuseEffect(() => {\r\n checkSolution();\r\n},[])\r\n\r\nuseEffect(() => {\r\n\r\n  if(liveBoard.length > 1){\r\n    console.log(\"liveBoard is up\");\r\n    refs.current = document.getElementsByClassName(\"SudokuBlock\")[2];\r\n    refs.current.focus();\r\n  }\r\n  \r\n},[liveBoard])\r\n\r\nuseEffect(() => {\r\n  \r\n},[])\r\n  \r\nreturn(\r\n    <div className=\"BoardAndControllerWrap\">\r\n    <div className=\"BoardContainer\">\r\n      {board}\r\n    </div>\r\n    <div className=\"controlWrapper\">\r\n    <Controls\r\n        lastRef={refs} \r\n        liveBoard={liveBoard}\r\n        checkSolution={checkSolution}\r\n        isSolved={props.isSolved}\r\n        switchTheme={props.switchTheme}\r\n        updateHints={updateHints}\r\n        SetHintsCount={SetHintsCount}\r\n        hintsCount={hintsCount}\r\n\r\n      />\r\n    </div>\r\n    \r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module"}