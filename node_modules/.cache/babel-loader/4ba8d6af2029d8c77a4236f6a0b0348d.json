{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\devProjects\\\\sudokuManiac\\\\sudoku_app\\\\src\\\\components\\\\SudokuBoard.js\";\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  let liveBoard = [];\n  let solvedBoardCopu = [...props.solvedBoard];\n  let tempBoard = [];\n\n  function boardLevel() {\n    console.log(\"!!!!\");\n    console.log(props.solvedBoard);\n    tempBoard = [];\n    tempBoard = [...solvedBoard];\n    console.log(tempBoard);\n\n    if (props.difficultyLevel === 1) {\n      console.log(\"diff lvl is on 1 = easy\");\n      console.log(props.difficultyLevel);\n\n      for (let i = 0; i < 44; i++) {\n        const randomCol = Math.floor(Math.random() * tempBoard.length);\n        const randomRow = Math.floor(Math.random() * tempBoard.length);\n\n        if (tempBoard[randomCol][randomRow] !== 0) {\n          tempBoard[randomCol][randomRow] = 0;\n        } else {\n          i--;\n        }\n      }\n    } else if (props.difficultyLevel === 2) {\n      for (let i = 0; i < 49; i++) {\n        const randomCol = Math.floor(Math.random() * tempBoard.length);\n        const randomRow = Math.floor(Math.random() * tempBoard.length);\n\n        if (tempBoard[randomCol][randomRow] !== 0) {\n          tempBoard[randomCol][randomRow] = 0;\n        } else {\n          i--;\n        }\n      }\n    } else if (props.difficultyLevel === 3) {\n      for (let i = 0; i < 54; i++) {\n        const randomCol = Math.floor(Math.random() * tempBoard.length);\n        const randomRow = Math.floor(Math.random() * tempBoard.length);\n\n        if (tempBoard[randomCol][randomRow] !== 0) {\n          tempBoard[randomCol][randomRow] = 0;\n        } else {\n          i--;\n        }\n      }\n    } //liveBoard = await[...tempBoard];\n\n  }\n\n  function printBoard() {\n    boardLevel();\n  } // useEffect(() => {\n  //   // üëáÔ∏è move condition in hook\n  //   if(solvedBoard){\n  //     boardLevel();\n  //   }\n  //\n  //   \n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: boardLevel,\n      children: \"bbb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        console.log(solvedBoard);\n      },\n      children: \"log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","Board","props","liveBoard","solvedBoardCopu","solvedBoard","tempBoard","boardLevel","console","log","difficultyLevel","i","randomCol","Math","floor","random","length","randomRow","printBoard"],"sources":["C:/Users/User/Documents/devProjects/sudokuManiac/sudoku_app/src/components/SudokuBoard.js"],"sourcesContent":["import React, {useEffect} from \"react\";\r\n\r\nfunction Board(props){\r\n  \r\n\r\n  let liveBoard = [];\r\n  let solvedBoardCopu = [...props.solvedBoard]\r\n  let tempBoard = [];\r\n\r\n  function  boardLevel(){\r\n    console.log(\"!!!!\");\r\n    console.log(props.solvedBoard)\r\n\r\n    tempBoard = [];\r\n    \r\n   tempBoard =  [...solvedBoard];\r\n    console.log(tempBoard)\r\n\r\n    if(props.difficultyLevel === 1){\r\n      console.log(\"diff lvl is on 1 = easy\")\r\n      console.log(props.difficultyLevel)\r\n      for(let i = 0; i < 44; i++){\r\n        const randomCol = Math.floor(Math.random() * tempBoard.length);\r\n        const randomRow = Math.floor(Math.random() * tempBoard.length);\r\n        \r\n        if(tempBoard[randomCol][randomRow] !== 0){\r\n          tempBoard[randomCol][randomRow] = 0;\r\n        } else {\r\n          i--\r\n        }\r\n      }\r\n    } else if(props.difficultyLevel === 2){\r\n      for(let i = 0; i < 49; i++){\r\n        const randomCol = Math.floor(Math.random() * tempBoard.length);\r\n        const randomRow = Math.floor(Math.random() * tempBoard.length);\r\n        \r\n        if(tempBoard[randomCol][randomRow] !== 0){\r\n          tempBoard[randomCol][randomRow] = 0;\r\n        } else {\r\n          i--\r\n        }\r\n      }\r\n    } else if(props.difficultyLevel === 3){\r\n      for(let i = 0; i < 54; i++){\r\n        const randomCol = Math.floor(Math.random() * tempBoard.length);\r\n        const randomRow = Math.floor(Math.random() * tempBoard.length);\r\n        \r\n        if(tempBoard[randomCol][randomRow] !== 0){\r\n          tempBoard[randomCol][randomRow] = 0;\r\n        } else {\r\n          i--\r\n        }\r\n      }\r\n    }\r\n    \r\n   //liveBoard = await[...tempBoard];\r\n  }\r\n\r\n  function printBoard(){\r\n    boardLevel();\r\n  }\r\n   \r\n // useEffect(() => {\r\n //   // üëáÔ∏è move condition in hook\r\n //   if(solvedBoard){\r\n //     boardLevel();\r\n //   }\r\n//\r\n //   \r\n // }, []);\r\n\r\n  return(\r\n    <>\r\n      <button onClick={boardLevel}>bbb</button>\r\n      <button onClick={() => {console.log(solvedBoard)}}>log</button>\r\n\r\n    </>\r\n  );\r\n}\r\nexport default Board;"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAqB;EAGnB,IAAIC,SAAS,GAAG,EAAhB;EACA,IAAIC,eAAe,GAAG,CAAC,GAAGF,KAAK,CAACG,WAAV,CAAtB;EACA,IAAIC,SAAS,GAAG,EAAhB;;EAEA,SAAUC,UAAV,GAAsB;IACpBC,OAAO,CAACC,GAAR,CAAY,MAAZ;IACAD,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACG,WAAlB;IAEAC,SAAS,GAAG,EAAZ;IAEDA,SAAS,GAAI,CAAC,GAAGD,WAAJ,CAAb;IACCG,OAAO,CAACC,GAAR,CAAYH,SAAZ;;IAEA,IAAGJ,KAAK,CAACQ,eAAN,KAA0B,CAA7B,EAA+B;MAC7BF,OAAO,CAACC,GAAR,CAAY,yBAAZ;MACAD,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACQ,eAAlB;;MACA,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;QACzB,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,SAAS,CAACU,MAArC,CAAlB;QACA,MAAMC,SAAS,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,SAAS,CAACU,MAArC,CAAlB;;QAEA,IAAGV,SAAS,CAACM,SAAD,CAAT,CAAqBK,SAArB,MAAoC,CAAvC,EAAyC;UACvCX,SAAS,CAACM,SAAD,CAAT,CAAqBK,SAArB,IAAkC,CAAlC;QACD,CAFD,MAEO;UACLN,CAAC;QACF;MACF;IACF,CAbD,MAaO,IAAGT,KAAK,CAACQ,eAAN,KAA0B,CAA7B,EAA+B;MACpC,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;QACzB,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,SAAS,CAACU,MAArC,CAAlB;QACA,MAAMC,SAAS,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,SAAS,CAACU,MAArC,CAAlB;;QAEA,IAAGV,SAAS,CAACM,SAAD,CAAT,CAAqBK,SAArB,MAAoC,CAAvC,EAAyC;UACvCX,SAAS,CAACM,SAAD,CAAT,CAAqBK,SAArB,IAAkC,CAAlC;QACD,CAFD,MAEO;UACLN,CAAC;QACF;MACF;IACF,CAXM,MAWA,IAAGT,KAAK,CAACQ,eAAN,KAA0B,CAA7B,EAA+B;MACpC,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;QACzB,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,SAAS,CAACU,MAArC,CAAlB;QACA,MAAMC,SAAS,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,SAAS,CAACU,MAArC,CAAlB;;QAEA,IAAGV,SAAS,CAACM,SAAD,CAAT,CAAqBK,SAArB,MAAoC,CAAvC,EAAyC;UACvCX,SAAS,CAACM,SAAD,CAAT,CAAqBK,SAArB,IAAkC,CAAlC;QACD,CAFD,MAEO;UACLN,CAAC;QACF;MACF;IACF,CA5CmB,CA8CrB;;EACA;;EAED,SAASO,UAAT,GAAqB;IACnBX,UAAU;EACX,CA1DkB,CA4DpB;EACA;EACA;EACA;EACA;EACD;EACC;EACA;;;EAEC,oBACE;IAAA,wBACE;MAAQ,OAAO,EAAEA,UAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAE,MAAM;QAACC,OAAO,CAACC,GAAR,CAAYJ,WAAZ;MAAyB,CAAjD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAOD;;KA5EQJ,K;AA6ET,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}