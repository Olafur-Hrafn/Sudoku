{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\devProjects\\\\sudokuManiac\\\\sudoku_app\\\\src\\\\components\\\\SudokuBoard.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SudokuBoard() {\n  let counter = 0;\n  let epmtyBoard = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]];\n\n  function generateBoard() {\n    let board = new Array(9).fill(new Array(9).fill(0));\n    console.log(epmtyBoard);\n    log;\n    let nextZero = FindZero(board); // //Base case - if there are no zero´s on the board, return board\n    // if(nextZero === null){\n    //   return board;\n    // } \n    // // Recursive case - \n    // else {\n    //   let row = nextZero[0];\n    //   let col = nextZero[1];\n    //   \n    // }\n    // rndNumbers = shuffle(rndNumbers);\n\n    console.log(epmtyBoard);\n    let rndNumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    shuffle(rndNumbers);\n\n    for (let i = 0; i < 3; i++) {\n      for (let k = 0; k < 3; k++) {\n        epmtyBoard[i][k] = rndNumbers[0];\n        console.log(rndNumbers);\n        rndNumbers.splice(0, 1);\n        console.log(epmtyBoard);\n        counter++;\n      }\n    }\n\n    console.log(board);\n  }\n\n  function shuffle(numberArray) {\n    // Fisher Yates Shuffle //\n    let currentIndex = numberArray.length,\n        randomIndex; // While there remain elements to shuffle.\n\n    while (currentIndex !== 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--; // And swap it with the current element.\n\n      [numberArray[currentIndex], numberArray[randomIndex]] = [numberArray[randomIndex], numberArray[currentIndex]];\n    } // Used like so\n\n\n    console.log(numberArray);\n    return numberArray;\n  }\n\n  function FindZero(board) {\n    //finds next 0 on board and returns its location//\n    let zeroPlacement = [];\n\n    for (let i = 0; i < board.length; i++) {\n      for (let j = 0; j < board[i].length; j++) {\n        if (board[i][j] === 0) {\n          zeroPlacement.push(i);\n          zeroPlacement.push(j);\n          return zeroPlacement;\n        }\n\n        if (zeroPlacement.length !== 0) {\n          return null;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  function IsValidPlacement(row, col, value, board) {\n    // 3 if statements, nr. 1 checks for horizontal duplicates. Nr 2 = Vertical duplicates. Nr 3 = 3x3 block duplicated\n    for (let i = 0; i < board.length; i++) {\n      if (board[row][i] === value) {\n        return false;\n      }\n\n      if (board[i][col] === value) {\n        return false;\n      }\n\n      if (board[Math.floor(row - row % 3 + i / 3)][Math.floor(col - col % 3 + i % 3)] === value) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: generateBoard,\n      children: \"h\\xE6 \\xE9g er board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = SudokuBoard;\nexport default SudokuBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SudokuBoard\");","map":{"version":3,"names":["React","SudokuBoard","counter","epmtyBoard","generateBoard","board","Array","fill","console","log","nextZero","FindZero","rndNumbers","shuffle","i","k","splice","numberArray","currentIndex","length","randomIndex","Math","floor","random","zeroPlacement","j","push","IsValidPlacement","row","col","value"],"sources":["C:/Users/User/Documents/devProjects/sudokuManiac/sudoku_app/src/components/SudokuBoard.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction SudokuBoard(){\r\n  let counter = 0 ;\r\n  let epmtyBoard = [\r\n    [0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0],\r\n  ];\r\n\r\n  function generateBoard(){\r\n    let board  = new Array(9).fill(new Array(9).fill(0));\r\n    console.log(epmtyBoard)\r\n    log\r\n    let nextZero = FindZero(board)\r\n    \r\n   // //Base case - if there are no zero´s on the board, return board\r\n   // if(nextZero === null){\r\n   //   return board;\r\n   // } \r\n   // // Recursive case - \r\n   // else {\r\n   //   let row = nextZero[0];\r\n   //   let col = nextZero[1];\r\n   //   \r\n   // }\r\n   \r\n  // rndNumbers = shuffle(rndNumbers);\r\n  console.log(epmtyBoard)\r\n  let rndNumbers = [1,2,3,4,5,6,7,8,9];\r\n  shuffle(rndNumbers);\r\n  for(let i = 0; i < 3; i++){\r\n    for(let k = 0; k < 3; k++){  \r\n     epmtyBoard[i][k] = rndNumbers[0]\r\n     console.log(rndNumbers)\r\n   rndNumbers.splice(0,1);\r\n   console.log(epmtyBoard)\r\n   counter++;\r\n    }\r\n  }\r\n\r\n     console.log(board)\r\n\r\n}\r\n\r\nfunction shuffle(numberArray) {\r\n  // Fisher Yates Shuffle //\r\n\r\n  let currentIndex = numberArray.length,  randomIndex;\r\n\r\n  // While there remain elements to shuffle.\r\n  while (currentIndex !== 0) {\r\n\r\n    // Pick a remaining element.\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [numberArray[currentIndex], numberArray[randomIndex]] = [\r\n      numberArray[randomIndex], numberArray[currentIndex]];\r\n  }\r\n// Used like so\r\n  console.log(numberArray);\r\n  return numberArray;\r\n\r\n}\r\n\r\nfunction FindZero(board){\r\n  //finds next 0 on board and returns its location//\r\n  let zeroPlacement = [];\r\n    for(let i = 0; i < board.length; i++){\r\n      for(let j = 0; j < board[i].length; j++){\r\n        if(board[i][j] === 0){\r\n          zeroPlacement.push(i);\r\n          zeroPlacement.push(j);\r\n          return zeroPlacement;\r\n          }\r\n          if(zeroPlacement.length !== 0){\r\n            return null;\r\n          }\r\n      }\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction IsValidPlacement(row,col,value, board){\r\n  // 3 if statements, nr. 1 checks for horizontal duplicates. Nr 2 = Vertical duplicates. Nr 3 = 3x3 block duplicated\r\n   for(let i = 0; i < board.length; i++){\r\n    \r\n     if (board[row][i] === value)\r\n         {\r\n           return false;\r\n         }\r\n     if (board[i][col] === value)\r\n         {\r\n           return false;\r\n         }\r\n     if (board[Math.floor((row - row % 3) + i / 3)][Math.floor((col - col % 3) + i % 3)] === value)\r\n         {\r\n           return false;\r\n         }\r\n   }\r\n   return true;\r\n }\r\n\r\n  return(\r\n    <>\r\n      <h2 onClick={generateBoard}>hæ ég er board</h2>\r\n    </>\r\n  )\r\n}\r\nexport default SudokuBoard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}