{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\devProjects\\\\sudokuManiac\\\\sudoku_app\\\\src\\\\components\\\\SolvedScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useContext } from 'react';\nimport { UserContext } from '../userContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStopwatch, faLightbulb, faBrain } from '@fortawesome/free-solid-svg-icons';\nimport '../components/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SolvedScreen() {\n  _s();\n\n  const {\n    SetSolvedBoard,\n    SetIsSolved,\n    SetDifficultyLevel,\n    difficultyLevel,\n    isSolved,\n    scoreCard\n  } = useContext(UserContext);\n  let hint = localStorage.getItem(\"hintCounter\");\n\n  async function newGame(e) {\n    let lvl = parseInt(e.target.value);\n    SetDifficultyLevel(lvl);\n\n    if (lvl === 1) {\n      await SetDifficultyLevel(0);\n      SetDifficultyLevel(1);\n    } else if (lvl === 2) {\n      await SetDifficultyLevel(0);\n      SetDifficultyLevel(2);\n    } else if (lvl === 3) {\n      await SetDifficultyLevel(0);\n      SetDifficultyLevel(3);\n    }\n\n    if (isSolved) {\n      SetSolvedBoard([]);\n      SetIsSolved(current => !current);\n    }\n  }\n\n  const level = () => {\n    let levelName = 'hmmmmm';\n\n    if (difficultyLevel === 1) {\n      levelName = 'Easy';\n    } else if (difficultyLevel === 2) {\n      levelName = 'Medium';\n    } else if (difficultyLevel === 3) {\n      levelName = 'Hard';\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: levelName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  };\n\n  let levelname = level();\n\n  let cardRender = () => {\n    if (isSolved) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"solvedCardContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"solvedCardWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Congratulations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"You solved the puzzle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scores\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"solvedCardTime\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faStopwatch\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 15\n                }, this), \"Time:\", ' ', ('0' + Math.floor(scoreCard.time / 60000 % 60)).slice(-2), \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"solvedCardTime\",\n                children: ('0' + Math.floor(scoreCard.time / 1000 % 60)).slice(-2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hints\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faLightbulb\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 15\n                }, this), \" Hints: \", hint]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lvlName\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faBrain\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 15\n                }, this), \"Level:\", levelname]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"solvedH2Text\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"playAgain\",\n                children: \"Play again\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"solvedCardButtonWrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                value: \"1\",\n                className: \"dropdown-btn\",\n                onClick: newGame,\n                children: \"Easy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                value: \"2\",\n                className: \"dropdown-btn\",\n                onClick: newGame,\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                value: \"3\",\n                className: \"dropdown-btn\",\n                onClick: newGame,\n                children: \"Hard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  let card = cardRender;\n  return {\n    card\n  };\n}\n\n_s(SolvedScreen, \"JmLT1xOeNNtSFtv9t+cAPH+imVI=\");\n\n_c = SolvedScreen;\nexport default SolvedScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SolvedScreen\");","map":{"version":3,"names":["React","useContext","UserContext","FontAwesomeIcon","faStopwatch","faLightbulb","faBrain","SolvedScreen","SetSolvedBoard","SetIsSolved","SetDifficultyLevel","difficultyLevel","isSolved","scoreCard","hint","localStorage","getItem","newGame","e","lvl","parseInt","target","value","current","level","levelName","levelname","cardRender","Math","floor","time","slice","card"],"sources":["C:/Users/User/Documents/devProjects/sudokuManiac/sudoku_app/src/components/SolvedScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { useContext } from 'react';\r\nimport { UserContext } from '../userContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faStopwatch,\r\n  faLightbulb,\r\n  faBrain,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport '../components/styles.css';\r\n\r\nfunction SolvedScreen() {\r\n  const {\r\n    SetSolvedBoard,\r\n    SetIsSolved,\r\n    SetDifficultyLevel,\r\n    difficultyLevel,\r\n    isSolved,\r\n    scoreCard,\r\n  } = useContext(UserContext);\r\n\r\n  let hint = localStorage.getItem (\"hintCounter\")\r\n\r\n  async function newGame(e) {\r\n    let lvl = parseInt(e.target.value);\r\n    SetDifficultyLevel(lvl);\r\n    if (lvl === 1) {\r\n      await SetDifficultyLevel(0);\r\n      SetDifficultyLevel(1);\r\n    } else if (lvl === 2) {\r\n      await SetDifficultyLevel(0);\r\n      SetDifficultyLevel(2);\r\n    } else if (lvl === 3) {\r\n      await SetDifficultyLevel(0);\r\n      SetDifficultyLevel(3);\r\n    }\r\n\r\n    if (isSolved) {\r\n      SetSolvedBoard([]);\r\n      SetIsSolved((current) => !current);\r\n    }\r\n  }\r\n\r\n  const level = () => {\r\n    let levelName = 'hmmmmm';\r\n    if (difficultyLevel === 1) {\r\n      levelName = 'Easy';\r\n    } else if (difficultyLevel === 2) {\r\n      levelName = 'Medium';\r\n    } else if (difficultyLevel === 3) {\r\n      levelName = 'Hard';\r\n    }\r\n    return <span>{levelName}</span>;\r\n  };\r\n\r\n  let levelname = level();\r\n\r\n  let cardRender = () => {\r\n    if(isSolved){\r\n      return <div className='solvedCardContainer'>\r\n      <div className='solvedCardWrapper'>\r\n        <h1>Congratulations</h1>\r\n        <h2>You solved the puzzle</h2>\r\n        <div className='scores'>\r\n          <div className='time'>\r\n            <span className='solvedCardTime'>\r\n              <FontAwesomeIcon icon={faStopwatch} />\r\n              Time:{' '}\r\n              {('0' + Math.floor((scoreCard.time / 60000) % 60)).slice(-2)}:\r\n            </span>\r\n            <span className='solvedCardTime'>\r\n              {('0' + Math.floor((scoreCard.time / 1000) % 60)).slice(-2)}\r\n            </span>\r\n          </div>\r\n          <div className='hints'>\r\n            <span>\r\n              <FontAwesomeIcon icon={faLightbulb} /> Hints: {hint}\r\n            </span>\r\n          </div>\r\n          <div className='lvlName'>\r\n            <span>\r\n              <FontAwesomeIcon icon={faBrain} />\r\n              Level:{levelname}\r\n            </span>\r\n          </div>\r\n          <h2 className='solvedH2Text'>\r\n            <div className='playAgain'>Play again</div>\r\n          </h2>\r\n          <div className='solvedCardButtonWrapper'>\r\n            <button value='1' className='dropdown-btn' onClick={newGame}>\r\n              Easy\r\n            </button>\r\n            <button value='2' className='dropdown-btn' onClick={newGame}>\r\n              Medium\r\n            </button>\r\n            <button value='3' className='dropdown-btn' onClick={newGame}>\r\n              Hard\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    } else return <></>;\r\n  }\r\n  let card = cardRender;\r\n    return (\r\n      {card}\r\n    );\r\n  \r\n}\r\n\r\nexport default SolvedScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}