{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\devProjects\\\\sudokuManiac\\\\sudoku_app\\\\src\\\\components\\\\SudokuBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef, useContext } from 'react';\nimport { UserContext } from '../userContext';\nimport './styles.css';\nimport Controls from '../components/Controls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  _s();\n\n  const {\n    solvedBoard,\n    currentBoard,\n    isSolved,\n    SetIsSolved,\n    SetHintCounter\n  } = useContext(UserContext);\n  const [hintsCount, SetHintsCount] = useState(0);\n  let refs = useRef(null);\n  refs.current = document.getElementsByClassName('SudokuBlock')[2];\n  let liveBoard = [];\n  let anwser = [];\n  let hintsFromControls = 0;\n\n  async function handleMovement(e, idx) {\n    let currentBox = document.getElementsByClassName('SudokuBlock')[idx];\n\n    switch (true) {\n      case e.keyCode === 38 && idx > 8:\n        refs.current = document.getElementsByClassName('SudokuBlock')[idx - 9];\n        refs.current.focus();\n        break;\n\n      case e.keyCode === 37 && idx > 0:\n        refs.current = document.getElementsByClassName('SudokuBlock')[idx - 1];\n        refs.current.focus();\n        break;\n\n      case e.keyCode === 39 && idx < 80:\n        refs.current = document.getElementsByClassName('SudokuBlock')[idx + 1];\n        refs.current.focus();\n        break;\n\n      case e.keyCode === 40 && idx < 72:\n        refs.current = document.getElementsByClassName('SudokuBlock')[idx + 9];\n        refs.current.focus();\n        break;\n\n      case e.key >= 1 && e.key <= 9 && isNaN(parseInt(liveBoard[idx])):\n        document.getElementsByClassName('SudokuBlock')[idx].innerText = e.key;\n        anwser[idx] = parseInt(e.key);\n        checkSolution(hintsFromControls);\n        break;\n\n      case (e.keyCode === 46 || e.keyCode === 8) && currentBox.innerText !== liveBoard[idx]:\n        document.getElementsByClassName('SudokuBlock')[idx].innerText = '';\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  function printBoard(board) {\n    for (let i = 0; i < board.length; i++) {\n      for (let j = 0; j < board[i].length; j++) {\n        if (board[i][j] === 0) {\n          liveBoard.push('  ');\n        } else {\n          liveBoard.push(board[i][j]);\n        }\n      }\n    }\n\n    anwser = [...liveBoard]; // const array = anwser.map(a => ({...a}));\n\n    return liveBoard.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: idx,\n      ref: refs[idx],\n      tabIndex: \"0\",\n      className: \"SudokuBlock\",\n      onClick: e => handleClick(e, idx),\n      onKeyDown: e => handleMovement(e, idx),\n      children: item\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this));\n  }\n\n  let board = printBoard(currentBoard);\n\n  function handleClick(e, idx) {\n    // focus clicked div + put as refs.current\n    refs.current = document.getElementsByClassName('SudokuBlock')[idx];\n    refs.current.focus();\n  }\n\n  function updateHints() {}\n\n  function checkSolution(hints) {\n    // check if player has soulution right\n    hintsFromControls = hints;\n    let TempSolvedBoard = solvedBoard;\n    TempSolvedBoard = TempSolvedBoard.flat();\n    const tempArr = document.getElementsByClassName('SudokuBlock');\n    let xAnwser = [];\n\n    for (let i = 0; i < tempArr.length; i++) {\n      let text = tempArr[i].innerText;\n\n      if (text === '') {\n        text = tempArr[i].innerText;\n        xAnwser.push(text);\n      } else {\n        text = tempArr[i].innerText;\n        xAnwser.push(parseInt(text));\n      }\n    }\n\n    if (JSON.stringify(TempSolvedBoard) === JSON.stringify(xAnwser)) {\n      SetHintCounter(hintsFromControls); //SetIsSolved((current) => !current);\n    }\n\n    if (JSON.stringify(TempSolvedBoard) === JSON.stringify(xAnwser)) {}\n  }\n\n  useEffect(() => {\n    if (!isSolved) {\n      checkSolution();\n    }\n  });\n  useEffect(() => {\n    if (liveBoard.length > 1) {\n      refs.current = document.getElementsByClassName('SudokuBlock')[2];\n      refs.current.focus();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BoardAndControllerWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BoardContainer\",\n      children: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controlWrapper\",\n      children: /*#__PURE__*/_jsxDEV(Controls, {\n        lastRef: refs,\n        liveBoard: liveBoard,\n        checkSolution: checkSolution,\n        isSolved: props.isSolved,\n        switchTheme: props.switchTheme,\n        updateHints: updateHints,\n        SetHintsCount: SetHintsCount,\n        hintsCount: hintsCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"DTmPZZWFroBSExFhqQdUI/FgSOs=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useContext","UserContext","Controls","Board","props","solvedBoard","currentBoard","isSolved","SetIsSolved","SetHintCounter","hintsCount","SetHintsCount","refs","current","document","getElementsByClassName","liveBoard","anwser","hintsFromControls","handleMovement","e","idx","currentBox","keyCode","focus","key","isNaN","parseInt","innerText","checkSolution","printBoard","board","i","length","j","push","map","item","handleClick","updateHints","hints","TempSolvedBoard","flat","tempArr","xAnwser","text","JSON","stringify","switchTheme"],"sources":["C:/Users/User/Documents/devProjects/sudokuManiac/sudoku_app/src/components/SudokuBoard.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useContext } from 'react';\r\nimport { UserContext } from '../userContext';\r\nimport './styles.css';\r\nimport Controls from '../components/Controls';\r\n\r\nfunction Board(props) {\r\n  const { solvedBoard, currentBoard,isSolved, SetIsSolved, SetHintCounter } =\r\n    useContext(UserContext);\r\n  const [hintsCount, SetHintsCount] = useState(0);\r\n\r\n  let refs = useRef(null);\r\n  refs.current = document.getElementsByClassName('SudokuBlock')[2];\r\n  let liveBoard = [];\r\n  let anwser = [];\r\n  let hintsFromControls = 0;\r\n\r\n  async function handleMovement(e, idx) {\r\n    let currentBox = document.getElementsByClassName('SudokuBlock')[idx];\r\n    switch (true) {\r\n      case e.keyCode === 38 && idx > 8:\r\n        refs.current = document.getElementsByClassName('SudokuBlock')[idx - 9];\r\n        refs.current.focus();\r\n        break;\r\n      case e.keyCode === 37 && idx > 0:\r\n        refs.current = document.getElementsByClassName('SudokuBlock')[idx - 1];\r\n        refs.current.focus();\r\n        break;\r\n      case e.keyCode === 39 && idx < 80:\r\n        refs.current = document.getElementsByClassName('SudokuBlock')[idx + 1];\r\n        refs.current.focus();\r\n        break;\r\n      case e.keyCode === 40 && idx < 72:\r\n        refs.current = document.getElementsByClassName('SudokuBlock')[idx + 9];\r\n        refs.current.focus();\r\n        break;\r\n      case e.key >= 1 && e.key <= 9 && isNaN(parseInt(liveBoard[idx])):\r\n        document.getElementsByClassName('SudokuBlock')[idx].innerText = e.key;\r\n        anwser[idx] = parseInt(e.key);\r\n        checkSolution(hintsFromControls);\r\n        break;\r\n      case (e.keyCode === 46 || e.keyCode === 8) &&\r\n        currentBox.innerText !== liveBoard[idx]:\r\n        document.getElementsByClassName('SudokuBlock')[idx].innerText = '';\r\n        break;\r\n\r\n      default:\r\n       return;\r\n    }\r\n  }\r\n\r\n  function printBoard(board) {\r\n    for (let i = 0; i < board.length; i++) {\r\n      for (let j = 0; j < board[i].length; j++) {\r\n        if (board[i][j] === 0) {\r\n          liveBoard.push('  ');\r\n        } else {\r\n          liveBoard.push(board[i][j]);\r\n        }\r\n      }\r\n    }\r\n    anwser = [...liveBoard];\r\n    // const array = anwser.map(a => ({...a}));\r\n    return liveBoard.map((item, idx) => (\r\n      <div\r\n        key={idx}\r\n        id={idx}\r\n        ref={refs[idx]}\r\n        tabIndex='0'\r\n        className='SudokuBlock'\r\n        onClick={(e) => handleClick(e, idx)}\r\n        onKeyDown={(e) => handleMovement(e, idx)}\r\n      >\r\n        {item}\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  let board = printBoard(currentBoard);\r\n\r\n  function handleClick(e, idx) {\r\n    // focus clicked div + put as refs.current\r\n    refs.current = document.getElementsByClassName('SudokuBlock')[idx];\r\n    refs.current.focus();\r\n  }\r\n\r\n  function updateHints() {}\r\n\r\n  function checkSolution(hints) {\r\n    // check if player has soulution right\r\n    \r\n    hintsFromControls = hints;\r\n\r\n    let TempSolvedBoard = solvedBoard;\r\n    TempSolvedBoard = TempSolvedBoard.flat();\r\n\r\n    const tempArr = document.getElementsByClassName('SudokuBlock');\r\n\r\n    let xAnwser = [];\r\n    for (let i = 0; i < tempArr.length; i++) {\r\n      let text = tempArr[i].innerText;\r\n      if (text === '') {\r\n        text = tempArr[i].innerText;\r\n        xAnwser.push(text);\r\n      } else {\r\n        text = tempArr[i].innerText;\r\n        xAnwser.push(parseInt(text));\r\n      }\r\n    }\r\n\r\n    if (JSON.stringify(TempSolvedBoard) === JSON.stringify(xAnwser)) {\r\n      SetHintCounter(hintsFromControls);\r\n      //SetIsSolved((current) => !current);\r\n    }\r\n    if(JSON.stringify(TempSolvedBoard) === JSON.stringify(xAnwser)){}\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isSolved){checkSolution();}\r\n  },);\r\n\r\n  useEffect(() => {\r\n    if (liveBoard.length > 1) {\r\n      refs.current = document.getElementsByClassName('SudokuBlock')[2];\r\n      refs.current.focus();\r\n    }\r\n  }, );\r\n\r\n  return (\r\n    <div className='BoardAndControllerWrap'>\r\n      <div className='BoardContainer'>{board}</div>\r\n      <div className='controlWrapper'>\r\n        <Controls\r\n          lastRef={refs}\r\n          liveBoard={liveBoard}\r\n          checkSolution={checkSolution}\r\n          isSolved={props.isSolved}\r\n          switchTheme={props.switchTheme}\r\n          updateHints={updateHints}\r\n          SetHintsCount={SetHintsCount}\r\n          hintsCount={hintsCount}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Board;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}