{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\devProjects\\\\sudokuManiac\\\\sudoku_app\\\\src\\\\components\\\\Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = () => {\n  _s();\n\n  const [time, setTime] = useState(0);\n  const [running, setRunning] = useState(false);\n  useEffect(() => {\n    let interval;\n    setRunning(true); //  if (running) {\n    //    interval = setInterval(() => {\n    //      setTime((prevTime) => prevTime + 10);\n    //    }, 10);\n    //  } else if (!running) {\n    //    clearInterval(interval);\n    //  }\n\n    return () => clearInterval(interval);\n  }, [running]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stopwatch\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"numbers\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [(\"0\" + Math.floor(time / 60000 % 60)).slice(-2), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [(\"0\" + Math.floor(time / 1000 % 60)).slice(-2), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (\"0\" + time / 10 % 100).slice(-2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRunning(true),\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRunning(false),\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTime(0),\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"IfGJxOGKgLeAwp7t6UKjY06PfN8=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","Timer","time","setTime","running","setRunning","interval","clearInterval","Math","floor","slice"],"sources":["C:/Users/User/Documents/devProjects/sudokuManiac/sudoku_app/src/components/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Timer = () => { \r\n  const [time, setTime] = useState(0);\r\n  const [running, setRunning] = useState(false);\r\n  useEffect(() => {\r\n    let interval;\r\n    setRunning(true)\r\n  //  if (running) {\r\n  //    interval = setInterval(() => {\r\n  //      setTime((prevTime) => prevTime + 10);\r\n  //    }, 10);\r\n  //  } else if (!running) {\r\n  //    clearInterval(interval);\r\n  //  }\r\n    return () => clearInterval(interval);\r\n  }, [running]);\r\n  return (\r\n    <div className=\"stopwatch\">\r\n      <div className=\"numbers\">\r\n        <span>{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:</span>\r\n        <span>{(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}:</span>\r\n        <span>{(\"0\" + ((time / 10) % 100)).slice(-2)}</span>\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <button onClick={() => setRunning(true)}>Start</button>\r\n        <button onClick={() => setRunning(false)}>Stop</button>\r\n        <button onClick={() => setTime(0)}>Reset</button>       \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;EACAC,SAAS,CAAC,MAAM;IACd,IAAIM,QAAJ;IACAD,UAAU,CAAC,IAAD,CAAV,CAFc,CAGhB;IACA;IACA;IACA;IACA;IACA;IACA;;IACE,OAAO,MAAME,aAAa,CAACD,QAAD,CAA1B;EACD,CAXQ,EAWN,CAACF,OAAD,CAXM,CAAT;EAYA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE;MAAK,SAAS,EAAC,SAAf;MAAA,wBACE;QAAA,WAAO,CAAC,MAAMI,IAAI,CAACC,KAAL,CAAYP,IAAI,GAAG,KAAR,GAAiB,EAA5B,CAAP,EAAwCQ,KAAxC,CAA8C,CAAC,CAA/C,CAAP;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,WAAO,CAAC,MAAMF,IAAI,CAACC,KAAL,CAAYP,IAAI,GAAG,IAAR,GAAgB,EAA3B,CAAP,EAAuCQ,KAAvC,CAA6C,CAAC,CAA9C,CAAP;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA,UAAO,CAAC,MAAQR,IAAI,GAAG,EAAR,GAAc,GAAtB,EAA4BQ,KAA5B,CAAkC,CAAC,CAAnC;MAAP;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAK,SAAS,EAAC,SAAf;MAAA,wBACE;QAAQ,OAAO,EAAE,MAAML,UAAU,CAAC,IAAD,CAAjC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,OAAO,EAAE,MAAMA,UAAU,CAAC,KAAD,CAAjC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,OAAO,EAAE,MAAMF,OAAO,CAAC,CAAD,CAA9B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CA7BD;;GAAMF,K;;KAAAA,K;AA+BN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}