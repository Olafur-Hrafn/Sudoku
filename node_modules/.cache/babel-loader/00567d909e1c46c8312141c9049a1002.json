{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\devProjects\\\\sudokuManiac\\\\sudoku_app\\\\src\\\\components\\\\SudokuBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  _s();\n\n  const [state, SetState] = useState(false); //  console.log(\"this is the current board sent from parent, built from suduko brain\")\n  //console.log(props.currentBoard)\n  //liveBoard = await[...tempBoard];\n\n  function printBoard() {\n    function renderToArr(board) {\n      for (let i = 0; i < board.length; i++) {\n        for (let j = 0; j < board[i].length; j++) {\n          if (board[i][j] === 0) {\n            newarr.push('  ');\n          } else {\n            newarr.push(board[i][j]);\n          }\n        }\n      }\n\n      return newarr.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: refs.current[idx],\n        tabIndex: \"0\",\n        className: \"SudokuBlock\",\n        onKeyDown: e => handleMovement(e, idx),\n        children: item\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this));\n    }\n\n    ; // TODO\n    // prenta út div fyrir hvert stak, og gera handleinput á það.\n    // console.log(props.currentBoard);;\n  } //  useEffect(() =>{\n  //    \n  //    if(!state){\n  //      SetState(true)\n  //    } else {\n  //      SetState(false)\n  //    }\n  //  },[])\n  //  useEffect(() => {\n  //    printBoard();\n  //\n  //    \n  //  }, [state]);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: printBoard,\n      children: \"bbb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Board, \"kdJoJ8JVQHwQVjw5VftOfsBOPj0=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useState","Board","props","state","SetState","printBoard","renderToArr","board","i","length","j","newarr","push","map","item","idx","refs","current","e","handleMovement"],"sources":["C:/Users/User/Documents/devProjects/sudokuManiac/sudoku_app/src/components/SudokuBoard.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nfunction Board(props){\r\n  const [state,SetState] = useState(false);\r\n  \r\n//  console.log(\"this is the current board sent from parent, built from suduko brain\")\r\n//console.log(props.currentBoard)\r\n  \r\n    \r\n    \r\n   //liveBoard = await[...tempBoard];\r\n  \r\n\r\n  function printBoard(){\r\n    function renderToArr (board) {\r\n  \r\n      for(let i = 0; i < board.length; i++){\r\n        for(let j =0; j < board[i].length; j++){\r\n          \r\n          if(board[i][j] === 0){ newarr.push('  ')}\r\n          else {newarr.push(board[i][j])}\r\n        }\r\n      }\r\n  \r\n      \r\n          \r\n      return newarr.map((item, idx) => ( \r\n        <div\r\n          key={idx}\r\n          ref={refs.current[idx]}\r\n          tabIndex='0'\r\n          className='SudokuBlock'\r\n          onKeyDown={(e) => handleMovement(e,idx)} \r\n        >\r\n          {item}\r\n        </div>\r\n      ));\r\n    };\r\n    // TODO\r\n    // prenta út div fyrir hvert stak, og gera handleinput á það.\r\n\r\n\r\n   // console.log(props.currentBoard);;\r\n  }\r\n   \r\n//  useEffect(() =>{\r\n//    \r\n//    if(!state){\r\n//      SetState(true)\r\n//    } else {\r\n//      SetState(false)\r\n//    }\r\n//  },[])\r\n//  useEffect(() => {\r\n//    printBoard();\r\n//\r\n//    \r\n//  }, [state]);\r\n\r\n  return(\r\n    <>\r\n      <button onClick={printBoard}>bbb</button>\r\n      <button >log</button>\r\n\r\n    </>\r\n  );\r\n}\r\nexport default Board;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;;AAGA,SAASC,KAAT,CAAeC,KAAf,EAAqB;EAAA;;EACnB,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,KAAD,CAAjC,CADmB,CAGrB;EACA;EAIG;;EAGD,SAASK,UAAT,GAAqB;IACnB,SAASC,WAAT,CAAsBC,KAAtB,EAA6B;MAE3B,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,KAAK,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;QACnC,KAAI,IAAIE,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGH,KAAK,CAACC,CAAD,CAAL,CAASC,MAA3B,EAAmCC,CAAC,EAApC,EAAuC;UAErC,IAAGH,KAAK,CAACC,CAAD,CAAL,CAASE,CAAT,MAAgB,CAAnB,EAAqB;YAAEC,MAAM,CAACC,IAAP,CAAY,IAAZ;UAAkB,CAAzC,MACK;YAACD,MAAM,CAACC,IAAP,CAAYL,KAAK,CAACC,CAAD,CAAL,CAASE,CAAT,CAAZ;UAAyB;QAChC;MACF;;MAID,OAAOC,MAAM,CAACE,GAAP,CAAW,CAACC,IAAD,EAAOC,GAAP,kBAChB;QAEE,GAAG,EAAEC,IAAI,CAACC,OAAL,CAAaF,GAAb,CAFP;QAGE,QAAQ,EAAC,GAHX;QAIE,SAAS,EAAC,aAJZ;QAKE,SAAS,EAAGG,CAAD,IAAOC,cAAc,CAACD,CAAD,EAAGH,GAAH,CALlC;QAAA,UAOGD;MAPH,GACOC,GADP;QAAA;QAAA;QAAA;MAAA,QADK,CAAP;IAWD;;IAAA,CAxBkB,CAyBnB;IACA;IAGD;EACA,CAzCkB,CA2CrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEE,oBACE;IAAA,wBACE;MAAQ,OAAO,EAAEV,UAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAOD;;GAhEQJ,K;;KAAAA,K;AAiET,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}