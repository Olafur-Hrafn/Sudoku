{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\devProjects\\\\sudokuManiac\\\\sudoku_app\\\\src\\\\components\\\\SudokuBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef, useContext } from \"react\";\nimport { UserContext } from \"../userContext\";\nimport './styles.css';\nimport Controls from '../components/Controls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  _s();\n\n  const {\n    solvedBoard,\n    currentBoard,\n    SetIsSolved,\n    SetHintCounter,\n    hintCounter\n  } = useContext(UserContext);\n  const [state, SetState] = useState(false);\n  const [lastActiveDiv, SetLastActiveDiv] = useState();\n  const [userAnwser, SetUserAnwser] = useState([]);\n  const [hintsCount, SetHintsCount] = useState(0); //const [helperShaddow,SetHelperShaddow] = useState(false);\n\n  let refs = useRef(null);\n  refs.current = document.getElementsByClassName(\"SudokuBlock\")[2];\n  let liveBoard = [];\n  let anwser = []; //function applyShaddow(idx){\n  //  let currentbox = document.getElementsByClassName(\"SudokuBlock\");\n  //    for(let i = 0; i <= currentbox.length; i++){\n  //      console.log(currentbox[i])\n  //    }\n  //  //currentbox.style.backgroundColor = '';\n  //  //currentbox.style.backgroundColor = 'yellow';\n  //\n  //  \n  //}\n  // Movement section: track user input and change div focus and insert or delete from innerText\n\n  async function handleMovement(e, idx) {\n    //applyShaddow(idx);\n    let currentBox = document.getElementsByClassName(\"SudokuBlock\")[idx];\n\n    switch (true) {\n      case e.keyCode === 38 && idx > 8:\n        refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx - 9];\n        refs.current.focus();\n        break;\n\n      case e.keyCode === 37 && idx > 0:\n        refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx - 1];\n        refs.current.focus();\n        break;\n\n      case e.keyCode === 39 && idx < 80:\n        refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx + 1];\n        refs.current.focus();\n        break;\n\n      case e.keyCode === 40 && idx < 72:\n        refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx + 9];\n        refs.current.focus();\n        break;\n\n      case e.key >= 1 && e.key <= 9 && isNaN(parseInt(liveBoard[idx])):\n        document.getElementsByClassName(\"SudokuBlock\")[idx].innerText = e.key;\n        anwser[idx] = parseInt(e.key);\n        console.log(hintCounter);\n        checkSolution(hintCounter);\n        break;\n\n      case (e.keyCode === 46 || e.keyCode === 8) && currentBox.innerText != liveBoard[idx]:\n        document.getElementsByClassName(\"SudokuBlock\")[idx].innerText = '';\n        break;\n\n      default:\n        console.log(e);\n    }\n  }\n\n  function printBoard(board) {\n    for (let i = 0; i < board.length; i++) {\n      for (let j = 0; j < board[i].length; j++) {\n        if (board[i][j] === 0) {\n          liveBoard.push('  ');\n        } else {\n          liveBoard.push(board[i][j]);\n        }\n      }\n    }\n\n    anwser = [...liveBoard]; // const array = anwser.map(a => ({...a}));\n\n    return liveBoard.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: idx,\n      ref: refs[idx],\n      tabIndex: \"0\",\n      className: \"SudokuBlock\",\n      onClick: e => test(e, idx),\n      onKeyDown: e => handleMovement(e, idx),\n      children: item\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this));\n  }\n\n  let board = printBoard(currentBoard); //laga nafn\n\n  function test(e, idx) {\n    console.log(idx); //let x = e.target.__reactFiber$km7ltcxneuo.index\n    //console.log(x)\n    //let divIndex = e.target.__reactFiber$km7ltcxneuo.index;\n\n    refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx];\n    refs.current.focus();\n  } //function solve(){\n  // //let arr1 = [1,2,3]\n  // //let arr2 = [1,2,3]\n  // let solvedBoard = props.solvedBoard;\n  // solvedBoard = solvedBoard.flat()\n  // // skíra einhvað annað en blocks  og laga þannig\n  //  const blocks = document.getElementsByClassName(\"SudokuBlock\");\n  //\n  //  let xAnwser = [];\n  //  for(let i = 0; i < blocks.length; i++){\n  // \n  //    let text = blocks[i].innerText\n  //    if( text === \"\"){\n  //       text = blocks[i].innerText;\n  //      xAnwser.push(text);\n  //    } else{\n  //       text = blocks[i].innerText\n  //      xAnwser.push(parseInt(text))\n  //    }\n  //\n  //  }\n  //\n  //  if(JSON.stringify(solvedBoard) == JSON.stringify(xAnwser)){\n  //    console.log(\"yessss Sir\");\n  //    console.log(state)\n  //  }else {\n  //    console.log(state);\n  //    \n  //  }\n  //\n  ////  if (solvedBoard.length === anwser.length) {\n  ////    return solvedBoard.every((element, index) => {\n  ////      if (element === anwser[index]) {\n  ////        \n  ////        console.log(\"Sudoku board solved\")\n  ////      }\n  ////    });\n  ////  } else {\n  ////    console.log(\"not solved\");\n  ////  }\n  //}\n  //function handleOutsideMovement(){\n  //  document.addEventListener('keydown',function(event){\n  //    let idx = refs.current.id;\n  //\n  //    if(event.keyCode === 76 && idx > 0){\n  //      idx = idx - 1\n  //      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx];\n  //      refs.current.focus();\n  //\n  //    }\n  //    console.log(event.keyCode);\n  //  })\n  //  //refs.current = e.target;\n  //  //e.target.focus();\n  //  //console.log(e)\n  //  //let divIndex = e.path[0].__reactFiber$nv6lose87zk.key;\n  //  //refs.current = document.getElementsByClassName(\"SudokuBlock\")[divIndex];\n  //  //refs.current.focus();\n  //}\n\n\n  function updateHints() {}\n\n  function checkSolution(hints) {\n    //  if(hints === 0){\n    //    checkSolution(hints);\n    //  } \n    let TempSolvedBoard = solvedBoard;\n    TempSolvedBoard = TempSolvedBoard.flat(); // skíra einhvað annað en blocks  og laga þannig\n\n    const tempArr = document.getElementsByClassName(\"SudokuBlock\");\n    let xAnwser = [];\n\n    for (let i = 0; i < tempArr.length; i++) {\n      let text = tempArr[i].innerText;\n\n      if (text === \"\") {\n        text = tempArr[i].innerText;\n        xAnwser.push(text);\n      } else {\n        text = tempArr[i].innerText;\n        xAnwser.push(parseInt(text));\n      }\n    }\n\n    if (JSON.stringify(TempSolvedBoard) == JSON.stringify(xAnwser)) {\n      console.log(\"yessss Sir\");\n      console.log(hints);\n      SetHintCounter(hints);\n      SetIsSolved(current => !current); //handleState();\n    } else {\n      console.log(\"nibb\");\n    }\n  }\n\n  const handleState = () => {\n    SetIsSolved(current => !current);\n  };\n\n  useEffect(() => {\n    checkSolution();\n  }, []);\n  useEffect(() => {\n    if (liveBoard.length > 1) {\n      console.log(\"liveBoard is up\");\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[2];\n      refs.current.focus();\n    }\n  }, [liveBoard]);\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BoardAndControllerWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BoardContainer\",\n      children: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controlWrapper\",\n      children: /*#__PURE__*/_jsxDEV(Controls, {\n        lastRef: refs,\n        liveBoard: liveBoard,\n        checkSolution: checkSolution,\n        isSolved: props.isSolved,\n        switchTheme: props.switchTheme,\n        updateHints: updateHints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"yGvCqxxPVs0YEFnMB72Ixev4v7k=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useContext","UserContext","Controls","Board","props","solvedBoard","currentBoard","SetIsSolved","SetHintCounter","hintCounter","state","SetState","lastActiveDiv","SetLastActiveDiv","userAnwser","SetUserAnwser","hintsCount","SetHintsCount","refs","current","document","getElementsByClassName","liveBoard","anwser","handleMovement","e","idx","currentBox","keyCode","focus","key","isNaN","parseInt","innerText","console","log","checkSolution","printBoard","board","i","length","j","push","map","item","test","updateHints","hints","TempSolvedBoard","flat","tempArr","xAnwser","text","JSON","stringify","handleState","isSolved","switchTheme"],"sources":["C:/Users/User/Documents/devProjects/sudokuManiac/sudoku_app/src/components/SudokuBoard.js"],"sourcesContent":["import React, {useEffect, useState,useRef,useContext} from \"react\";\r\nimport { UserContext } from \"../userContext\";\r\nimport './styles.css'\r\nimport Controls from '../components/Controls'\r\n\r\n\r\nfunction Board(props){\r\n  \r\n  const {solvedBoard,currentBoard,SetIsSolved,SetHintCounter,hintCounter} = useContext(UserContext);\r\n  const [state,SetState] = useState(false);\r\n  const [lastActiveDiv,SetLastActiveDiv] = useState()\r\n  const [userAnwser, SetUserAnwser] = useState([])\r\n  const [hintsCount, SetHintsCount] = useState(0)\r\n  //const [helperShaddow,SetHelperShaddow] = useState(false);\r\n\r\n  let refs = useRef(null);\r\n  refs.current = document.getElementsByClassName(\"SudokuBlock\")[2];\r\n  let liveBoard = [];\r\n  let anwser = []; \r\n  \r\n  \r\n  //function applyShaddow(idx){\r\n  //  let currentbox = document.getElementsByClassName(\"SudokuBlock\");\r\n  //    for(let i = 0; i <= currentbox.length; i++){\r\n  //      console.log(currentbox[i])\r\n  //    }\r\n  //  //currentbox.style.backgroundColor = '';\r\n  //  //currentbox.style.backgroundColor = 'yellow';\r\n//\r\n  //  \r\n  //}\r\n \r\n  // Movement section: track user input and change div focus and insert or delete from innerText\r\n   async function handleMovement (e,idx){\r\n    //applyShaddow(idx);\r\n    let currentBox = document.getElementsByClassName(\"SudokuBlock\")[idx];\r\n    switch(true) {\r\n    case e.keyCode === 38 && idx > 8:\r\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx - 9]\r\n      refs.current.focus();\r\n    break;\r\n    case e.keyCode === 37 && idx > 0:\r\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx - 1]\r\n      refs.current.focus();\r\n    break;\r\n    case e.keyCode === 39 && idx < 80:\r\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx + 1]\r\n      refs.current.focus();\r\n    break;\r\n    case e.keyCode === 40 && idx < 72:\r\n      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx + 9]\r\n      refs.current.focus();\r\n    break;\r\n    case e.key >= 1 && e.key <= 9 && isNaN(parseInt(liveBoard[idx])):\r\n      document.getElementsByClassName(\"SudokuBlock\")[idx].innerText = e.key;\r\n      anwser[idx] = parseInt(e.key);\r\n      console.log(hintCounter)\r\n      checkSolution(hintCounter);\r\n    break;\r\n   case (e.keyCode === 46 || e.keyCode === 8)  && currentBox.innerText != liveBoard[idx]:  \r\n   document.getElementsByClassName(\"SudokuBlock\")[idx].innerText = '';\r\n    break;\r\n    \r\n  default:\r\n    console.log(e)\r\n}\r\n}\r\n\r\n  function printBoard(board){\r\n\r\n    for(let i = 0; i < board.length; i++){\r\n      for(let j =0; j < board[i].length; j++){\r\n        \r\n        if(board[i][j] === 0){ liveBoard.push('  ')}\r\n        else {liveBoard.push(board[i][j])}\r\n      }\r\n    }\r\n      anwser = [...liveBoard];\r\n     // const array = anwser.map(a => ({...a}));\r\n    return liveBoard.map((item, idx) => ( \r\n      <div\r\n        key={idx}\r\n        id={idx}\r\n        ref={refs[idx]}\r\n        tabIndex='0'\r\n        className='SudokuBlock'\r\n        onClick={(e) => test(e,idx)}\r\n        onKeyDown={(e) => handleMovement(e,idx)}\r\n        \r\n      >\r\n        {item}\r\n      </div>\r\n    ));\r\n      \r\n  }\r\n   \r\nlet board = printBoard(currentBoard)\r\n\r\n\r\n//laga nafn\r\nfunction test(e,idx){\r\n  console.log(idx);\r\n  //let x = e.target.__reactFiber$km7ltcxneuo.index\r\n//console.log(x)\r\n//let divIndex = e.target.__reactFiber$km7ltcxneuo.index;\r\nrefs.current = document.getElementsByClassName(\"SudokuBlock\")[idx]\r\nrefs.current.focus();\r\n}\r\n\r\n//function solve(){\r\n// //let arr1 = [1,2,3]\r\n// //let arr2 = [1,2,3]\r\n// let solvedBoard = props.solvedBoard;\r\n// solvedBoard = solvedBoard.flat()\r\n// // skíra einhvað annað en blocks  og laga þannig\r\n//  const blocks = document.getElementsByClassName(\"SudokuBlock\");\r\n//\r\n//  let xAnwser = [];\r\n//  for(let i = 0; i < blocks.length; i++){\r\n// \r\n//    let text = blocks[i].innerText\r\n//    if( text === \"\"){\r\n//       text = blocks[i].innerText;\r\n//      xAnwser.push(text);\r\n//    } else{\r\n//       text = blocks[i].innerText\r\n//      xAnwser.push(parseInt(text))\r\n//    }\r\n//\r\n//  }\r\n//\r\n//  if(JSON.stringify(solvedBoard) == JSON.stringify(xAnwser)){\r\n//    console.log(\"yessss Sir\");\r\n//    console.log(state)\r\n//  }else {\r\n//    console.log(state);\r\n//    \r\n//  }\r\n//\r\n////  if (solvedBoard.length === anwser.length) {\r\n////    return solvedBoard.every((element, index) => {\r\n////      if (element === anwser[index]) {\r\n////        \r\n////        console.log(\"Sudoku board solved\")\r\n////      }\r\n////    });\r\n////  } else {\r\n////    console.log(\"not solved\");\r\n////  }\r\n//}\r\n\r\n\r\n\r\n//function handleOutsideMovement(){\r\n//  document.addEventListener('keydown',function(event){\r\n//    let idx = refs.current.id;\r\n//\r\n//    if(event.keyCode === 76 && idx > 0){\r\n//      idx = idx - 1\r\n//      refs.current = document.getElementsByClassName(\"SudokuBlock\")[idx];\r\n//      refs.current.focus();\r\n//\r\n//    }\r\n//    console.log(event.keyCode);\r\n//  })\r\n//  //refs.current = e.target;\r\n//  //e.target.focus();\r\n//  //console.log(e)\r\n//  //let divIndex = e.path[0].__reactFiber$nv6lose87zk.key;\r\n//  //refs.current = document.getElementsByClassName(\"SudokuBlock\")[divIndex];\r\n//  //refs.current.focus();\r\n//}\r\n\r\nfunction updateHints(){\r\n\r\n}\r\n\r\n   function checkSolution(hints){\r\n  //  if(hints === 0){\r\n  //    checkSolution(hints);\r\n  //  } \r\n  \r\n  let TempSolvedBoard = solvedBoard;\r\n TempSolvedBoard = TempSolvedBoard.flat()\r\n // skíra einhvað annað en blocks  og laga þannig\r\n  const tempArr = document.getElementsByClassName(\"SudokuBlock\");\r\n\r\n  let xAnwser = [];\r\n  for(let i = 0; i < tempArr.length; i++){\r\n    let text = tempArr[i].innerText\r\n    if( text === \"\"){\r\n       text = tempArr[i].innerText;\r\n      xAnwser.push(text);\r\n    } else{\r\n       text = tempArr[i].innerText\r\n      xAnwser.push(parseInt(text))\r\n    }\r\n  }\r\n\r\n  if(JSON.stringify(TempSolvedBoard) == JSON.stringify(xAnwser)){\r\n    console.log(\"yessss Sir\");\r\n    console.log(hints)\r\n    \r\n    SetHintCounter(hints);\r\n    SetIsSolved(current => !current)\r\n    //handleState();\r\n    \r\n    } else {\r\n     console.log(\"nibb\");\r\n  }\r\n  }\r\n  const handleState = () => {\r\n    \r\n    SetIsSolved(current => !current);\r\n  };\r\n\r\nuseEffect(() => {\r\n checkSolution();\r\n},[])\r\n\r\nuseEffect(() => {\r\n\r\n  if(liveBoard.length > 1){\r\n    console.log(\"liveBoard is up\");\r\n    refs.current = document.getElementsByClassName(\"SudokuBlock\")[2];\r\n    refs.current.focus();\r\n  }\r\n  \r\n},[liveBoard])\r\n\r\nuseEffect(() => {\r\n  \r\n\r\n\r\n\r\n},[])\r\n  \r\nreturn(\r\n    <div className=\"BoardAndControllerWrap\">\r\n    <div className=\"BoardContainer\">\r\n      {board}\r\n    </div>\r\n    <div className=\"controlWrapper\">\r\n    <Controls\r\n        lastRef={refs} \r\n        liveBoard={liveBoard}\r\n        checkSolution={checkSolution}\r\n        isSolved={props.isSolved}\r\n        switchTheme={props.switchTheme}\r\n        updateHints={updateHints}\r\n\r\n      />\r\n    </div>\r\n    \r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module"}